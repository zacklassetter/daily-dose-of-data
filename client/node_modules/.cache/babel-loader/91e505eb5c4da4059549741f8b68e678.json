{"ast":null,"code":"import _slicedToArray from\"C:/Users/qdeman/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect,useCallback}from'react';import'./SelectionSort.scss';import Element from'../Element/Element';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectionSortDisplay=function SelectionSortDisplay(props){return props.array.map(function(value,index){if(index<props.sortedEndIndex)return/*#__PURE__*/_jsx(Element,{value:value,color:\"green\"},index);if(index===props.currentMinimum&&index===props.currentFocus)return/*#__PURE__*/_jsx(Element,{value:value,color:\"pink\",border:\"bordered\"},index);if(index===props.currentMinimum)return/*#__PURE__*/_jsx(Element,{value:value,color:\"pink\"},index);if(index===props.currentFocus)return/*#__PURE__*/_jsx(Element,{value:value,border:\"bordered\"},index);return/*#__PURE__*/_jsx(Element,{value:value},index);});};var SelectionSort=function SelectionSort(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),forceRender=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),array=_useState4[0],setArray=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),sorted=_useState6[0],setSorted=_useState6[1];var sorting=useRef(false);var interval=useRef(null);var sortedEndIndex=useRef(0);var currentFocus=useRef(-1);var currentMinimum=useRef(-1);var toggleSortingButton=useRef();var arraySizeInput=useRef();var speedSlider=useRef();//We call update on fake state variable to force rerender\nvar forceUpdate=function forceUpdate(){forceRender(function(renders){return renders+1;});};//sets state array to a random array for sorting\nvar generateArray=function generateArray(){if(sorting.current){toggleSorting();}var size=parseInt(arraySizeInput.current.value);if(isNaN(size))size=randInt(5,50);if(size>0){setArray(randomArray(size));setSorted(false);sortedEndIndex.current=0;currentFocus.current=-1;currentMinimum.current=-1;}arraySizeInput.current.value=null;};//generates a random array within reasonable bounds\nvar randomArray=useCallback(function(size){var newArray=new Array(size);for(var i=0;i<size;i++){newArray[i]=randInt(-999,1000);}return newArray;},[]);var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min)+min);};//initialize the array randomly at start\nuseEffect(function(){setArray(randomArray(randInt(5,50)));},[randomArray]);//completes one step of the sorting algorithm\nvar sortingStep=function sortingStep(){if(sortedEndIndex.current>=array.length){setSorted(true);toggleSorting();return;}if(currentFocus.current===array.length-1){var temp=array[sortedEndIndex.current];array[sortedEndIndex.current]=array[currentMinimum.current];array[currentMinimum.current]=temp;sortedEndIndex.current+=1;currentFocus.current=sortedEndIndex.current-1;currentMinimum.current=-1;return;}currentFocus.current+=1;if(currentMinimum.current===-1){currentMinimum.current=currentFocus.current;}else if(array[currentMinimum.current]>array[currentFocus.current]){currentMinimum.current=currentFocus.current;}};//function to turn sorting on and off by button click\nvar toggleSorting=function toggleSorting(){if(sorting.current){clearInterval(interval.current);sorting.current=false;toggleSortingButton.current.innerHTML=\"Sort\";toggleSortingButton.current.classList.remove(\"pinkButton\");toggleSortingButton.current.classList.add(\"greenButton\");}else if(!sorted){interval.current=setInterval(function(){sortingStep();forceUpdate();},1000-speedSlider.current.value);sorting.current=true;toggleSortingButton.current.innerHTML=\"Stop\";toggleSortingButton.current.classList.remove(\"greenButton\");toggleSortingButton.current.classList.add(\"pinkButton\");}};//changes the animation speed of sorting when the slider changes\nvar updateSpeed=function updateSpeed(){if(sorting.current){clearInterval(interval.current);interval.current=setInterval(function(){sortingStep();forceUpdate();},1000-speedSlider.current.value);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"selection-sort\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"randomButton\",onClick:generateArray,children:\"Random\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Array Size\"}),/*#__PURE__*/_jsx(\"input\",{id:\"arraySizeInput\",ref:arraySizeInput,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"toggleSortingButton\",className:\"greenButton\",ref:toggleSortingButton,onClick:toggleSorting,children:\"Sort\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledSlider\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Animation Speed\"}),/*#__PURE__*/_jsx(\"input\",{className:\"slider\",ref:speedSlider,onChange:updateSpeed,min:\"0\",max:\"990\",type:\"range\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization\",children:/*#__PURE__*/_jsx(SelectionSortDisplay,{array:array,sortedEndIndex:sortedEndIndex.current,currentFocus:currentFocus.current,currentMinimum:currentMinimum.current})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(Element,{color:\"green\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Sorted\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{}),/*#__PURE__*/_jsx(\"p\",{children:\"= Unsorted\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{color:\"pink\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Current Minimum\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{border:\"bordered\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Current Focus\"})]})]});};export default SelectionSort;","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Daily_Dose_of_Data/client/src/SelectionSort/SelectionSort.js"],"names":["React","useState","useRef","useEffect","useCallback","Element","SelectionSortDisplay","props","array","map","value","index","sortedEndIndex","currentMinimum","currentFocus","SelectionSort","forceRender","setArray","sorted","setSorted","sorting","interval","toggleSortingButton","arraySizeInput","speedSlider","forceUpdate","renders","generateArray","current","toggleSorting","size","parseInt","isNaN","randInt","randomArray","newArray","Array","i","min","max","Math","floor","random","sortingStep","length","temp","clearInterval","innerHTML","classList","remove","add","setInterval","updateSpeed"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './SelectionSort.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst SelectionSortDisplay = (props) => {\r\n    return props.array.map((value, index) => {\r\n        if (index < props.sortedEndIndex)\r\n            return <Element key={index} value={value} color=\"green\" />\r\n        if (index === props.currentMinimum && index === props.currentFocus)\r\n            return <Element key={index} value={value} color=\"pink\" border=\"bordered\" />\r\n        if (index === props.currentMinimum)\r\n            return <Element key={index} value={value} color=\"pink\" />\r\n        if (index === props.currentFocus)\r\n            return <Element key={index} value={value} border=\"bordered\" />\r\n        return <Element key={index} value={value} />\r\n    });\r\n}\r\n\r\nconst SelectionSort = () => {\r\n\r\n    const [, forceRender] = useState(0);\r\n    const [array, setArray] = useState([]);\r\n    const [sorted, setSorted] = useState(false);\r\n    const sorting = useRef(false);\r\n    const interval = useRef(null);\r\n    const sortedEndIndex = useRef(0);\r\n    const currentFocus = useRef(-1);\r\n    const currentMinimum = useRef(-1);\r\n    const toggleSortingButton = useRef();\r\n    const arraySizeInput = useRef();\r\n    const speedSlider = useRef();\r\n\r\n    //We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\r\n    //sets state array to a random array for sorting\r\n    const generateArray = () => {\r\n        if (sorting.current) {\r\n            toggleSorting();\r\n        }\r\n        var size = parseInt(arraySizeInput.current.value);\r\n        if(isNaN(size))\r\n            size = randInt(5,50);\r\n        if (size > 0) {\r\n            setArray(randomArray(size));\r\n            setSorted(false);\r\n            sortedEndIndex.current = 0;\r\n            currentFocus.current = -1;\r\n            currentMinimum.current = -1;\r\n        }\r\n        arraySizeInput.current.value = null;\r\n    }\r\n    //generates a random array within reasonable bounds\r\n    const randomArray = useCallback((size) => {\r\n        var newArray = new Array(size);\r\n            for (let i = 0; i < size; i++) {\r\n                newArray[i] = randInt(-999, 1000);\r\n            }\r\n        return newArray;\r\n    }, []);\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max-min) + min);\r\n    }\r\n\r\n    //initialize the array randomly at start\r\n    useEffect(() => {\r\n        setArray(randomArray(randInt(5,50)));\r\n    }, [randomArray]);\r\n\r\n    //completes one step of the sorting algorithm\r\n    const sortingStep = () => {\r\n        if (sortedEndIndex.current >= array.length) {\r\n            setSorted(true);\r\n            toggleSorting();\r\n            return;\r\n        }\r\n        if (currentFocus.current === array.length-1) {\r\n            var temp = array[sortedEndIndex.current];\r\n            array[sortedEndIndex.current] = array[currentMinimum.current];\r\n            array[currentMinimum.current] = temp;\r\n            sortedEndIndex.current += 1;\r\n            currentFocus.current = sortedEndIndex.current-1;\r\n            currentMinimum.current = -1;\r\n            return;\r\n        }\r\n        currentFocus.current += 1;\r\n        if (currentMinimum.current === -1) {\r\n            currentMinimum.current = currentFocus.current;\r\n        } else if (array[currentMinimum.current] > array[currentFocus.current]) {\r\n            currentMinimum.current = currentFocus.current;\r\n        }\r\n    }\r\n\r\n    //function to turn sorting on and off by button click\r\n    const toggleSorting = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            sorting.current = false;\r\n            toggleSortingButton.current.innerHTML = \"Sort\";\r\n            toggleSortingButton.current.classList.remove(\"pinkButton\");\r\n            toggleSortingButton.current.classList.add(\"greenButton\");\r\n        } else if (!sorted) {\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000-speedSlider.current.value);\r\n            sorting.current = true;\r\n            toggleSortingButton.current.innerHTML = \"Stop\";\r\n            toggleSortingButton.current.classList.remove(\"greenButton\");\r\n            toggleSortingButton.current.classList.add(\"pinkButton\");\r\n        }\r\n    }\r\n    //changes the animation speed of sorting when the slider changes\r\n    const updateSpeed = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000-speedSlider.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"selection-sort\">\r\n            <div id=\"main\">\r\n                <div className=\"controls\">\r\n                    <button id=\"randomButton\" onClick={generateArray}>Random</button>\r\n                    <span className=\"labeledInput\">\r\n                        <label>Array Size</label>\r\n                        <input id=\"arraySizeInput\" ref={arraySizeInput} type=\"text\"></input>\r\n                    </span>\r\n                    <br />\r\n                    <button id=\"toggleSortingButton\" className=\"greenButton\" ref={toggleSortingButton} onClick={toggleSorting}>Sort</button>\r\n                    <br />\r\n                    <span className=\"labeledSlider\">\r\n                        <label>Animation Speed</label>\r\n                        <input className=\"slider\" ref={speedSlider} onChange={updateSpeed} min=\"0\" max=\"990\" type=\"range\"></input>\r\n                    </span>\r\n                </div>\r\n                <div className=\"visualization\">\r\n                    <SelectionSortDisplay array={array} sortedEndIndex={sortedEndIndex.current} currentFocus={currentFocus.current} currentMinimum={currentMinimum.current} />\r\n                </div>\r\n            </div>\r\n            <div className=\"legend\">\r\n                <Element color=\"green\"></Element>\r\n                <p>= Sorted</p>\r\n                < br />\r\n                <Element></Element>\r\n                <p>= Unsorted</p>\r\n                <br />\r\n                <Element color=\"pink\"></Element>\r\n                <p>= Current Minimum</p>\r\n                <br />\r\n                <Element border=\"bordered\"></Element>\r\n                <p>= Current Focus</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectionSort;"]},"metadata":{},"sourceType":"module"}