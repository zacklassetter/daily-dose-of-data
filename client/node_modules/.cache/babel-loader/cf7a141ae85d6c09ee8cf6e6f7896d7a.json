{"ast":null,"code":"import _slicedToArray from\"C:/Users/qdeman/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import'./Map.scss';import Element from'../Element/Element';//react component to display a map\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MapDisplay=function MapDisplay(props){var componentList=[];props.map.forEach(function(value,key){componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"map-pair\",children:[/*#__PURE__*/_jsx(Element,{value:key}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{className:\"map-arrow\",children:\"\\u2193\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{value:value,color:\"green\"})]},componentList.length));});return componentList;};//react component for map visualization\nvar MyMap=function MyMap(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),forceRender=_useState2[1];var _useState3=useState(new Map()),_useState4=_slicedToArray(_useState3,2),map=_useState4[0],setMap=_useState4[1];var insertKey=useRef();var insertValue=useRef();var removeKey=useRef();var getKey=useRef();var getOutput=useRef();//We call update on fake state variable to force rerender\nvar forceUpdate=function forceUpdate(){forceRender(function(renders){return renders+1;});};//function to create a random map\nvar randomMap=function randomMap(){var size=randInt(5,40);var newMap=new Map();for(var i=0;i<size;i++){newMap.set(randInt(-999,1000),randInt(-999,1000));}setMap(newMap);};var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min)+min);};//function to create an empty map\nvar emptyMap=function emptyMap(){setMap(new Map());};//initialize to a random map\nuseEffect(randomMap,[]);//function to insert into map\nvar insert=function insert(){var key=parseInt(insertKey.current.value);if(isNaN(key))key=randInt(-999,1000);var value=parseInt(insertValue.current.value);if(isNaN(value))value=randInt(-999,1000);map.set(key,value);forceUpdate();insertKey.current.value=null;insertValue.current.value=null;};//function to remove from map\nvar remove=function remove(){var key=parseInt(removeKey.current.value);if(!isNaN(key))map.delete(key);forceUpdate();removeKey.current.value=null;};//function to get a value for a key in a map\nvar get=function get(){var key=parseInt(getKey.current.value);if(!isNaN(key))getOutput.current.value=map.get(key);forceUpdate();getKey.current.value=null;};return/*#__PURE__*/_jsxs(\"div\",{className:\"map\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"randomButton\",onClick:randomMap,children:\"Random\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"emptyButton\",onClick:emptyMap,children:\"Empty\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"insertButton\",onClick:insert,children:\"Insert\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Key\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertKey\",ref:insertKey,type:\"text\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Value\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertValue\",ref:insertValue,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"removeButton\",onClick:remove,children:\"Remove\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Key\"}),/*#__PURE__*/_jsx(\"input\",{id:\"removeKey\",ref:removeKey,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"getButton\",onClick:get,children:\"Get\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Key\"}),/*#__PURE__*/_jsx(\"input\",{id:\"getKey\",ref:getKey,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{id:\"getOutput\",ref:getOutput,type:\"text\",readonly:true})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization\",children:/*#__PURE__*/_jsx(MapDisplay,{map:map})})]});};export default MyMap;","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Daily_Dose_of_Data/client/src/Map/Map.js"],"names":["React","useState","useRef","useEffect","Element","MapDisplay","props","componentList","map","forEach","value","key","push","length","MyMap","forceRender","Map","setMap","insertKey","insertValue","removeKey","getKey","getOutput","forceUpdate","renders","randomMap","size","randInt","newMap","i","set","min","max","Math","floor","random","emptyMap","insert","parseInt","current","isNaN","remove","delete","get"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Map.scss';\r\nimport Element from '../Element/Element';\r\n\r\n//react component to display a map\r\nconst MapDisplay = (props) => {\r\n    var componentList = [];\r\n    props.map.forEach((value, key) => {\r\n        componentList.push(\r\n            <div key={componentList.length} className=\"map-pair\">\r\n                <Element value={key} />\r\n                <br />\r\n                <p className=\"map-arrow\">&#x2193;</p>\r\n                <br />\r\n                <Element value={value} color=\"green\" />\r\n            </div>\r\n        );\r\n    });\r\n    return componentList;\r\n}\r\n\r\n//react component for map visualization\r\nconst MyMap = () => {\r\n\r\n    const [, forceRender] = useState(0);\r\n    const [map, setMap] = useState(new Map());\r\n    const insertKey = useRef();\r\n    const insertValue = useRef();\r\n    const removeKey = useRef();\r\n    const getKey = useRef();\r\n    const getOutput = useRef();\r\n\r\n    //We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\r\n    //function to create a random map\r\n    const randomMap = () => {\r\n        const size = randInt(5, 40);\r\n        const newMap = new Map();\r\n        for (let i = 0; i < size; i++)\r\n            newMap.set(randInt(-999,1000), randInt(-999,1000));\r\n        setMap(newMap);\r\n    }\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max-min) + min);\r\n    }\r\n\r\n    //function to create an empty map\r\n    const emptyMap = () => {\r\n        setMap(new Map());\r\n    }\r\n\r\n    //initialize to a random map\r\n    useEffect(randomMap, []);\r\n\r\n    //function to insert into map\r\n    const insert = () => {\r\n        var key = parseInt(insertKey.current.value);\r\n        if (isNaN(key))\r\n            key = randInt(-999,1000);\r\n        var value = parseInt(insertValue.current.value);\r\n        if (isNaN(value))\r\n            value = randInt(-999,1000);\r\n        map.set(key, value);\r\n        forceUpdate();\r\n        insertKey.current.value = null;\r\n        insertValue.current.value = null;\r\n    }\r\n\r\n    //function to remove from map\r\n    const remove = () => {\r\n        var key = parseInt(removeKey.current.value);\r\n        if (!isNaN(key))\r\n            map.delete(key);\r\n        forceUpdate();\r\n        removeKey.current.value = null;\r\n    }\r\n\r\n    //function to get a value for a key in a map\r\n    const get = () => {\r\n        var key = parseInt(getKey.current.value);\r\n        if (!isNaN(key))\r\n            getOutput.current.value = map.get(key);\r\n        forceUpdate();\r\n        getKey.current.value = null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <div className=\"controls\">\r\n                <button id=\"randomButton\" onClick={randomMap}>Random</button>\r\n                <br />\r\n                <button id=\"emptyButton\" onClick={emptyMap}>Empty</button>\r\n                <br />\r\n                <button id=\"insertButton\" onClick={insert}>Insert</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Key</label>\r\n                    <input id=\"insertKey\" ref={insertKey} type=\"text\"></input>\r\n                </span>\r\n                <span className=\"labeledInput\">\r\n                    <label>Value</label>\r\n                    <input id=\"insertValue\" ref={insertValue} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button id=\"removeButton\" onClick={remove}>Remove</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Key</label>\r\n                    <input id=\"removeKey\" ref={removeKey} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button id=\"getButton\" onClick={get}>Get</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Key</label>\r\n                    <input id=\"getKey\" ref={getKey} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <input id=\"getOutput\" ref={getOutput} type=\"text\" readonly></input>\r\n            </div>\r\n            <div className=\"visualization\">\r\n                <MapDisplay map={map} />\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyMap;"]},"metadata":{},"sourceType":"module"}