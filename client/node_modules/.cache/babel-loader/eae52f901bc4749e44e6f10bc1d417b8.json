{"ast":null,"code":"import _slicedToArray from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import'./List.scss';import Element from'../Element/Element';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ListDisplay=function ListDisplay(props){return props.list.map(function(value,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:value})]},index);});};//main react component for list\nvar List=function List(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),forceRender=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),list=_useState4[0],setList=_useState4[1];var randomSize=useRef();var insertIndex=useRef();var insertValue=useRef();var removeIndex=useRef();var listOutput=useRef();var getIndex=useRef();//We call update on fake state variable to force rerender\nvar forceUpdate=function forceUpdate(){forceRender(function(renders){return renders+1;});};//sets list to a randomly generated list\nvar randomList=function randomList(){var size=randomSize.current.value;if(size===\"\"){size=randInt(10,60);}if(!isNaN(parseInt(size))&&size>0){var newList=[];for(var i=0;i<size;i++){newList.push(randInt(-999,1000));}setList(newList);}randomSize.current.value=null;};var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min)+min);};//initialize list to random list\nuseEffect(randomList,[]);var insert=function insert(){var index=parseInt(insertIndex.current.value);var value=parseInt(insertValue.current.value);if(isNaN(index))index=0;if(isNaN(value))value=0;if(index>=0&&index<=list.length){list.splice(index,0,value);forceUpdate();}else{listOutput.current.value=\"Invalid\";}insertIndex.current.value=null;insertValue.current.value=null;};var remove=function remove(){var index=parseInt(removeIndex.current.value);if(isNaN(index))index=0;if(index>=0&&index<list.length){var data=list.splice(index,1);forceUpdate();listOutput.current.value=data;}else{listOutput.current.value=\"Invalid\";}removeIndex.current.value=null;};var get=function get(){var index=parseInt(getIndex.current.value);if(isNaN(index))index=0;if(index>=0&&index<list.length){var data=list[index];listOutput.current.value=data;}else{listOutput.current.value=\"Invalid\";}getIndex.current.value=null;};return/*#__PURE__*/_jsxs(\"div\",{className:\"list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"randomButton\",onClick:randomList,children:\"Random\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Size\"}),/*#__PURE__*/_jsx(\"input\",{id:\"randomSizeInput\",ref:randomSize,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"insertButton\",onClick:insert,children:\"Insert\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertIndex\",ref:insertIndex,type:\"text\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Value\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertValue\",ref:insertValue,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"removeButton\",onClick:remove,children:\"Remove\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"removeIndex\",ref:removeIndex,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{id:\"listOutput\",type:\"text\",ref:listOutput,readOnly:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"getButton\",onClick:get,children:\"Get\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"getIndex\",ref:getIndex,type:\"text\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization\",children:/*#__PURE__*/_jsx(ListDisplay,{list:list})})]});};export default List;","map":{"version":3,"sources":["C:/Users/quint/Documents/Daily_Dose_of_Data/client/src/List/List.js"],"names":["React","useState","useRef","useEffect","Element","ListDisplay","props","list","map","value","index","List","forceRender","setList","randomSize","insertIndex","insertValue","removeIndex","listOutput","getIndex","forceUpdate","renders","randomList","size","current","randInt","isNaN","parseInt","newList","i","push","min","max","Math","floor","random","insert","length","splice","remove","data","get"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './List.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst ListDisplay = (props) => {\r\n    return props.list.map((value, index) => {\r\n        return (\r\n            <div key={index} className=\"labeledElement\">\r\n                <label>{index}</label>\r\n                <Element value={value}></Element>\r\n            </div>\r\n        );\r\n    });\r\n}\r\n\r\n//main react component for list\r\nconst List = () => {\r\n\r\n    const [, forceRender] = useState(0);\r\n    const [list, setList] = useState([]);\r\n    const randomSize = useRef();\r\n    const insertIndex = useRef();\r\n    const insertValue = useRef();\r\n    const removeIndex = useRef();\r\n    const listOutput = useRef();\r\n    const getIndex = useRef();\r\n\r\n    //We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\r\n    //sets list to a randomly generated list\r\n    const randomList = () => {\r\n        var size = randomSize.current.value;\r\n        if (size === \"\") {\r\n            size = randInt(10, 60);\r\n        }\r\n        if (!isNaN(parseInt(size)) && size > 0) {\r\n            var newList = [];\r\n            for (let i = 0; i < size; i++)\r\n                newList.push(randInt(-999,1000));\r\n            setList(newList);\r\n        }\r\n        randomSize.current.value = null;\r\n    }\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max-min) + min);\r\n    }\r\n\r\n    //initialize list to random list\r\n    useEffect(randomList, []);\r\n\r\n    const insert = () => {\r\n        var index = parseInt(insertIndex.current.value);\r\n        var value = parseInt(insertValue.current.value);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if(isNaN(value))\r\n            value = 0;\r\n        if (index >= 0 && index <= list.length) {\r\n            list.splice(index, 0, value);\r\n            forceUpdate();\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        insertIndex.current.value = null;\r\n        insertValue.current.value = null;\r\n    }\r\n\r\n    const remove = () => {\r\n        var index = parseInt(removeIndex.current.value);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if (index >= 0 && index < list.length) {\r\n            const data = list.splice(index, 1);\r\n            forceUpdate();\r\n            listOutput.current.value = data;\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        removeIndex.current.value = null;\r\n    }\r\n\r\n    const get = () => {\r\n        var index = parseInt(getIndex.current.value);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if (index >= 0 && index < list.length) {\r\n            const data = list[index];\r\n            listOutput.current.value = data;\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        getIndex.current.value = null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"list\">\r\n            <div className=\"controls\">\r\n                <button id=\"randomButton\" onClick={randomList}>Random</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Size</label>\r\n                    <input id=\"randomSizeInput\" ref={randomSize} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button id=\"insertButton\" onClick={insert}>Insert</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"insertIndex\" ref={insertIndex} type=\"text\"></input>\r\n                </span>\r\n                <span className=\"labeledInput\">\r\n                    <label>Value</label>\r\n                    <input id=\"insertValue\" ref={insertValue} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button id=\"removeButton\" onClick={remove}>Remove</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"removeIndex\" ref={removeIndex} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <input id=\"listOutput\" type=\"text\" ref={listOutput} readOnly></input>\r\n                <br />\r\n                <button id=\"getButton\" onClick={get}>Get</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"getIndex\" ref={getIndex} type=\"text\"></input>\r\n                </span>\r\n            </div>\r\n            <div className=\"visualization\">\r\n                <ListDisplay list={list} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}