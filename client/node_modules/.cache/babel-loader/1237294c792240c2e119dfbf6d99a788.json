{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\ReactApp\\\\src\\\\BubbleSort\\\\BubbleSort.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './BubbleSort.scss';\nimport Element from '../Element/Element';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BubbleSortDisplay = props => {\n  return props.array.map((value, index) => {\n    if (index > props.sortedStart.current) {\n      return /*#__PURE__*/_jsxDEV(Element, {\n        value: value,\n        color: \"green\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (index === props.focusOne.current || index === props.focusTwo.current) {\n      if (index === props.min.current) {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          value: value,\n          color: \"pink\",\n          border: \"bordered\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      }\n\n      if (index === props.max.current) {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          value: value,\n          color: \"yellow\",\n          border: \"bordered\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(Element, {\n        value: value,\n        border: \"bordered\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Element, {\n      value: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  });\n};\n\n_c = BubbleSortDisplay;\n\nconst BubbleSort = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [array] = useState([3, 7, 2, -3, 0, 22, 5, 1, -8, 9]);\n  const sorting = useRef(false);\n  const interval = useRef(null);\n  const swappedOnPass = useRef(false);\n  const sortedStart = useRef(array.length - 1);\n  const focusOne = useRef(-1);\n  const focusTwo = useRef(-1);\n  const min = useRef(-1);\n  const max = useRef(-1);\n  const toggleSortingButton = useRef(); //We call update on fake state variable to force rerender\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  };\n\n  function swap(arr, x, y) {\n    var temp = arr[x];\n    arr[x] = arr[y];\n    arr[y] = temp;\n  } //completes one step of the sorting algorithm\n\n\n  const sortingStep = () => {\n    if (sortedStart.current <= 0) return;\n\n    if (focusOne.current === -1 && focusTwo.current === -1) {\n      focusOne.current = 0;\n      focusTwo.current = 1;\n      return;\n    }\n\n    if (max.current === sortedStart.current) {\n      if (swappedOnPass.current === false) {\n        sortedStart.current = -1;\n      }\n\n      min.current = -1;\n      max.current = -1;\n      focusOne.current = 0;\n      focusTwo.current = 1;\n      swappedOnPass.current = false;\n      sortedStart.current--;\n    }\n\n    if (min.current === -1) {\n      if (array[focusOne.current] < array[focusTwo.current]) {\n        min.current = focusOne.current;\n        max.current = focusTwo.current;\n      } else {\n        min.current = focusTwo.current;\n        max.current = focusOne.current;\n      }\n    } else if (min.current > max.current) {\n      swap(array, min.current, max.current);\n      swappedOnPass.current = true;\n      var temp = max.current;\n      max.current = min.current;\n      min.current = temp;\n    } else {\n      min.current = -1;\n      max.current = -1;\n      focusOne.current++;\n      focusTwo.current++;\n    }\n  }; //function to turn sorting on and off by button click\n\n\n  const toggleSorting = () => {\n    if (sorting.current) {\n      clearInterval(interval.current);\n      sorting.current = false;\n      toggleSortingButton.current.innerHTML = \"Start\";\n    } else {\n      interval.current = setInterval(() => {\n        sortingStep();\n        forceUpdate();\n      }, 1000);\n      sorting.current = true;\n      toggleSortingButton.current.innerHTML = \"Stop\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bubble-sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: toggleSortingButton,\n          onClick: toggleSorting,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization\",\n        children: /*#__PURE__*/_jsxDEV(BubbleSortDisplay, {\n          array: array,\n          sortedStart: sortedStart,\n          focusOne: focusOne,\n          focusTwo: focusTwo,\n          min: min,\n          max: max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend\",\n      children: [/*#__PURE__*/_jsxDEV(Element, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Sorted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Unsorted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        border: \"bordered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Current Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Lesser of Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Greater of Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BubbleSort, \"vrzXlb6R3O8pqVSPd7R0T4MOp3A=\");\n\n_c2 = BubbleSort;\nexport default BubbleSort;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BubbleSortDisplay\");\n$RefreshReg$(_c2, \"BubbleSort\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/ReactApp/src/BubbleSort/BubbleSort.js"],"names":["React","useState","useRef","Element","BubbleSortDisplay","props","array","map","value","index","sortedStart","current","focusOne","focusTwo","min","max","BubbleSort","forceRender","sorting","interval","swappedOnPass","length","toggleSortingButton","forceUpdate","renders","swap","arr","x","y","temp","sortingStep","toggleSorting","clearInterval","innerHTML","setInterval"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './BubbleSort.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst BubbleSortDisplay = (props) => {\r\n    return props.array.map((value, index) => {\r\n        if (index > props.sortedStart.current) {\r\n            return <Element key={index} value={value} color=\"green\"/>\r\n        }\r\n        if (index === props.focusOne.current || index === props.focusTwo.current) {\r\n            if (index === props.min.current) {\r\n                return <Element key={index} value={value} color=\"pink\" border=\"bordered\" />\r\n            }\r\n            if (index === props.max.current) {\r\n                return <Element key={index} value={value} color=\"yellow\" border=\"bordered\" />\r\n            }\r\n            else return <Element key={index} value={value} border=\"bordered\" />\r\n            \r\n        }\r\n        return <Element key={index} value={value} />\r\n    });\r\n}\r\n\r\n\r\n\r\nconst BubbleSort = () => {\r\n    const [, forceRender] = useState(0);\r\n    const [array,] = useState([3, 7, 2, -3, 0, 22, 5, 1, -8, 9]);\r\n    const sorting = useRef(false);\r\n    const interval = useRef(null);\r\n    const swappedOnPass = useRef(false);\r\n    const sortedStart = useRef(array.length - 1);\r\n    const focusOne = useRef(-1);\r\n    const focusTwo = useRef(-1);\r\n    const min = useRef(-1);\r\n    const max = useRef(-1);\r\n    const toggleSortingButton = useRef();\r\n    \r\n    //We call update on fake state variable to force rerender\r\n    const forceUpdate = () => {\r\n        forceRender(renders => renders + 1);\r\n    }\r\n\r\n    function swap(arr, x, y) {\r\n        var temp = arr[x];\r\n        arr[x] = arr[y];\r\n        arr[y] = temp;\r\n    }\r\n\r\n    //completes one step of the sorting algorithm\r\n    const sortingStep = () => {\r\n        if (sortedStart.current <= 0) return;\r\n        if (focusOne.current === -1 && focusTwo.current === -1){\r\n            focusOne.current = 0;\r\n            focusTwo.current = 1;\r\n            return;\r\n        }\r\n        if (max.current === sortedStart.current) {\r\n            if (swappedOnPass.current === false) {\r\n                sortedStart.current = -1;\r\n            }\r\n\r\n            min.current = -1;\r\n            max.current = -1;\r\n            focusOne.current = 0;\r\n            focusTwo.current = 1;\r\n            swappedOnPass.current = false;\r\n            sortedStart.current--;\r\n        }\r\n        if (min.current === -1) {\r\n            if (array[focusOne.current] < array[focusTwo.current]) {\r\n                min.current = focusOne.current;\r\n                max.current = focusTwo.current;\r\n            }\r\n            else {\r\n                min.current = focusTwo.current;\r\n                max.current = focusOne.current;\r\n            }\r\n        }\r\n        else if (min.current > max.current) {\r\n            swap(array, min.current, max.current);\r\n            swappedOnPass.current = true;\r\n            var temp = max.current;\r\n            max.current = min.current;\r\n            min.current = temp;\r\n\r\n        } \r\n        else {\r\n            min.current = -1;\r\n            max.current = -1;\r\n            focusOne.current++;\r\n            focusTwo.current++;\r\n        }\r\n    }\r\n\r\n    //function to turn sorting on and off by button click\r\n    const toggleSorting = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            sorting.current = false;\r\n            toggleSortingButton.current.innerHTML = \"Start\";\r\n        }\r\n        else {\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000);\r\n            sorting.current = true;\r\n            toggleSortingButton.current.innerHTML = \"Stop\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bubble-sort\">\r\n            <div id=\"main\">\r\n                <div className=\"controls\">\r\n                    <button ref={toggleSortingButton} onClick={toggleSorting}>Start</button>\r\n                </div>\r\n                <div className=\"visualization\">\r\n                    <BubbleSortDisplay array={array} sortedStart={sortedStart} focusOne={focusOne} focusTwo={focusTwo} min={min} max={max}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"legend\">\r\n                <Element color=\"green\"></Element>\r\n                <p>= Sorted</p>\r\n                < br />\r\n                <Element></Element>\r\n                <p>= Unsorted</p>\r\n                <br />\r\n                <Element border=\"bordered\"></Element>\r\n                <p>= Current Focuses</p>\r\n                <br />\r\n                <Element color=\"pink\"></Element>\r\n                <p>= Lesser of Focuses</p>\r\n                <br />\r\n                <Element color=\"yellow\"></Element>\r\n                <p>= Greater of Focuses</p>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default BubbleSort;"]},"metadata":{},"sourceType":"module"}