{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\Testing\\\\quintenreacttesting\\\\src\\\\Stack\\\\Stack.js\";\nimport React, { Component } from 'react';\nimport './Stack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Stack extends Component {\n  constructor(props) {\n    super(props);\n\n    this.push = () => {\n      const data = this.stackInput.current.value;\n      this.setState(prevState => ({\n        stack: [...prevState.stack, data]\n      }));\n      this.stackInput.current.value = null;\n      this.stackOutput.current.value = this.state.stack[0];\n    };\n\n    this.pop = () => {//var newStack = this.state.stack;\n    };\n\n    this.state = {\n      stack: []\n    };\n    this.stackInput = /*#__PURE__*/React.createRef();\n    this.stackOutput = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Stack goes here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.push,\n        children: \"Push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.stackInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: this.stackOutput,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Stack;","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/Testing/quintenreacttesting/src/Stack/Stack.js"],"names":["React","Component","Stack","constructor","props","push","data","stackInput","current","value","setState","prevState","stack","stackOutput","state","pop","createRef","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAE7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAOlBC,IAPkB,GAOX,MAAM;AACZ,YAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,KAArC;AACA,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC3BC,QAAAA,KAAK,EAAE,CAAC,GAAGD,SAAS,CAACC,KAAd,EAAqBN,IAArB;AADoB,OAAL,CAAvB;AAGA,WAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,KAAxB,GAAgC,IAAhC;AACA,WAAKI,WAAL,CAAiBL,OAAjB,CAAyBC,KAAzB,GAAiC,KAAKK,KAAL,CAAWF,KAAX,CAAiB,CAAjB,CAAjC;AACA,KAdiB;;AAAA,SAgBlBG,GAhBkB,GAgBZ,MAAM,CACX;AACA,KAlBiB;;AAEjB,SAAKD,KAAL,GAAa;AAAEF,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKL,UAAL,gBAAkBP,KAAK,CAACgB,SAAN,EAAlB;AACA,SAAKH,WAAL,gBAAmBb,KAAK,CAACgB,SAAN,EAAnB;AACA;;AAeDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAQ,QAAA,OAAO,EAAE,KAAKZ,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAO,QAAA,GAAG,EAAE,KAAKE,UAAjB;AAA6B,QAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC;AAAO,QAAA,GAAG,EAAE,KAAKM,WAAjB;AAA8B,QAAA,IAAI,EAAC,MAAnC;AAA0C,QAAA,QAAQ;AAAlD;AAAA;AAAA;AAAA;AAAA,cALD;AAAA,oBADD;AASA;;AAhC4B;;AAmC9B,eAAeX,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport './Stack.css';\r\n\r\nclass Stack extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = { stack: [] };\r\n\t\tthis.stackInput = React.createRef();\r\n\t\tthis.stackOutput = React.createRef();\r\n\t}\r\n\t\r\n\tpush = () => {\r\n\t\tconst data = this.stackInput.current.value;\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tstack: [...prevState.stack, data]\r\n\t\t}))\r\n\t\tthis.stackInput.current.value = null;\r\n\t\tthis.stackOutput.current.value = this.state.stack[0];\r\n\t}\r\n\t\r\n\tpop = () => {\r\n\t\t//var newStack = this.state.stack;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<p>Stack goes here.</p>\r\n\t\t\t\t<button onClick={this.push}>Push</button>\r\n\t\t\t\t<input ref={this.stackInput} type=\"text\" />\r\n\t\t\t\t<button>Pop</button>\r\n\t\t\t\t<input ref={this.stackOutput} type=\"text\" readOnly />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Stack;"]},"metadata":{},"sourceType":"module"}