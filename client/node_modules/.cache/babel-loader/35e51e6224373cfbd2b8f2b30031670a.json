{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\Testing\\\\quintenreacttesting\\\\src\\\\Stack\\\\Stack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Stack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StackComponent = () => {\n  _s();\n\n  const [stack, setStack] = useState([]);\n  const stackInput = useRef();\n  const stackOutput = useRef();\n\n  const push = () => {\n    const data = stackInput.current.value;\n    setStack(prevStack => [...prevStack, data]);\n    stackInput.current.value = null;\n    stackOutput.current.value = stack[0];\n  };\n\n  const pop = () => {\n    setStack(prevStack => prevStack.slice(0, prevStack.length - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stack goes here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: push,\n      children: \"Push\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: stackInput,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pop,\n      children: \"Pop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: stackOutput,\n      type: \"text\",\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StackComponent, \"0Uq/kzg5rQNqHYemoUYBdMObhII=\");\n\n_c = StackComponent;\nexport default StackComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackComponent\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/Testing/quintenreacttesting/src/Stack/Stack.js"],"names":["React","useState","useRef","StackComponent","stack","setStack","stackInput","stackOutput","push","data","current","value","prevStack","pop","slice","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMK,UAAU,GAAGJ,MAAM,EAAzB;AACA,QAAMK,WAAW,GAAGL,MAAM,EAA1B;;AAEA,QAAMM,IAAI,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAGH,UAAU,CAACI,OAAX,CAAmBC,KAAhC;AACAN,IAAAA,QAAQ,CAACO,SAAS,IACjB,CAAC,GAAGA,SAAJ,EAAeH,IAAf,CADO,CAAR;AAGAH,IAAAA,UAAU,CAACI,OAAX,CAAmBC,KAAnB,GAA2B,IAA3B;AACAJ,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,KAApB,GAA4BP,KAAK,CAAC,CAAD,CAAjC;AACA,GAPD;;AASA,QAAMS,GAAG,GAAG,MAAM;AACjBR,IAAAA,QAAQ,CAACO,SAAS,IACjBA,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAkBF,SAAS,CAACG,MAAV,GAAiB,CAAnC,CADO,CAAR;AAGA,GAJD;;AAMA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAEP,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAO,MAAA,GAAG,EAAEF,UAAZ;AAAwB,MAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAQ,MAAA,OAAO,EAAEO,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAO,MAAA,GAAG,EAAEN,WAAZ;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,QAAQ;AAA7C;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AASA,CA9BD;;GAAMJ,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Stack.css';\r\n\r\nconst StackComponent = () => {\r\n\t\r\n\tconst [stack, setStack] = useState([])\r\n\tconst stackInput = useRef()\r\n\tconst stackOutput = useRef()\r\n\t\r\n\tconst push = () => {\r\n\t\tconst data = stackInput.current.value;\r\n\t\tsetStack(prevStack => (\r\n\t\t\t[...prevStack, data]\r\n\t\t));\r\n\t\tstackInput.current.value = null;\r\n\t\tstackOutput.current.value = stack[0];\r\n\t}\r\n\t\r\n\tconst pop = () => {\r\n\t\tsetStack(prevStack => (\r\n\t\t\tprevStack.slice(0,prevStack.length-1)\r\n\t\t));\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Stack goes here.</p>\r\n\t\t\t<button onClick={push}>Push</button>\r\n\t\t\t<input ref={stackInput} type=\"text\" />\r\n\t\t\t<button onClick={pop}>Pop</button>\r\n\t\t\t<input ref={stackOutput} type=\"text\" readOnly />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default StackComponent;"]},"metadata":{},"sourceType":"module"}