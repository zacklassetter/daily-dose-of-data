{"ast":null,"code":"import _slicedToArray from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _createClass from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import React,{useState,useRef,useEffect,useCallback}from'react';import'./LinkedList.scss';import Element from'../Element/Element';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Node=function Node(value){_classCallCheck(this,Node);this.value=value;this.next=null;};var LinkedListClass=/*#__PURE__*/function(){function LinkedListClass(){var head=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,LinkedListClass);this.head=head;this.size=0;}//for insertion at tail -- currently unused\n_createClass(LinkedListClass,[{key:\"insert\",value:function insert(data){if(this.head==null){this.head=new Node(data);}else{var current=this.head;while(current.next!=null){current=current.next;}current.next=new Node(data);}this.size++;}},{key:\"insertAt\",value:function insertAt(data,index){var newNode=new Node(data);var current=this.head;var previous;if(index<=this.size){if(index===0){newNode.next=this.head;this.head=newNode;}else{var i=0;while(i<index){i++;previous=current;current=current.next;}newNode.next=current;previous.next=newNode;}this.size++;}}},{key:\"get\",value:function get(index){var i=0;var current=this.head;while(i!==index){current=current.next;i++;}return current.value;}},{key:\"remove\",value:function remove(index){var i=0;var curr,prev,next;if(index<this.size&&this.size>0){if(index===0){this.head=this.head.next;this.size--;}else{i++;prev=this.head;curr=prev.next;next=curr.next;while(i!==index){i++;prev=prev.next;curr=curr.next;next=next.next;}prev.next=next;this.size--;}}}}]);return LinkedListClass;}();var LinkedListDisplay=function LinkedListDisplay(props){var current=props.list.head;var index=0;var componentList=[];while(current!=null){if(current===props.focus){componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:current.value,border:\"bordered\"})]},2*index));}else if(current===props.green){componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:current.value,color:\"green\"})]},2*index));}else if(current===props.yellow){componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:current.value,color:\"yellow\"})]},2*index));}else if(current===props.pink){componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:current.value,color:\"pink\"})]},2*index));}else{componentList.push(/*#__PURE__*/_jsxs(\"div\",{className:\"labeledElement\",children:[/*#__PURE__*/_jsx(\"label\",{children:index}),/*#__PURE__*/_jsx(Element,{value:current.value})]},2*index));}componentList.push(/*#__PURE__*/_jsx(\"p\",{className:\"arrow\",children:\"\\u2192\"},2*index+1));current=current.next;index++;}componentList.push(/*#__PURE__*/_jsx(Element,{value:\"null\"},2*index));return componentList;};var LinkedList=function LinkedList(){var _useState=useState(new LinkedListClass()),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),forceRender=_useState4[1];var randomSize=useRef();var insertIndex=useRef();var insertValue=useRef();var removeIndex=useRef();var listOutput=useRef();var getIndex=useRef();var speedSlider=useRef();var interval=useRef();var animationFunction=useRef();var animationValue=useRef();var targetIndex=useRef();var animating=useRef();var currentNode=useRef();var currentIndex=useRef();var green=useRef();var yellow=useRef(null);var pink=useRef(null);//We call update on fake state variable to force rerender\nvar forceUpdate=function forceUpdate(){forceRender(function(renders){return renders+1;});};//sets list to a randomly generated list\nvar randomList=function randomList(){if(animating.current)toggleAnimation();var size=randomSize.current.value;if(size===\"\"){size=randInt(8,40);}if(!isNaN(parseInt(size))&&size>0){var newList=new LinkedListClass();for(var i=0;i<size;i++){newList.insertAt(randInt(-999,1000),0);}setList(newList);}randomSize.current.value=null;};var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min)+min);};//function to pause or continue animation\nvar toggleAnimation=useCallback(function(){if(animating.current){clearInterval(interval.current);animating.current=false;animationFunction.current=null;animationValue.current=null;targetIndex.current=null;currentNode.current=null;currentIndex.current=null;pink.current=null;}else{interval.current=setInterval(function(){animationFunction.current();forceUpdate();},1000-speedSlider.current.value);animating.current=true;green.current=null;yellow.current=null;}},[]);//initialize list to random list\nuseEffect(randomList,[toggleAnimation]);//insertion only occurs at head for now\nfunction insert(){if(animating.current)toggleAnimation();var data=parseInt(insertValue.current.value);var index=parseInt(insertIndex.current.value);if(isNaN(data))data=randInt(-999,1000);if(isNaN(index))index=0;if(index===0){list.insertAt(data,0);green.current=list.head;yellow.current=null;forceUpdate();}else if(index>0&&index<list.size){animationFunction.current=insertStep;animationValue.current=data;targetIndex.current=index;currentNode.current=list.head;currentIndex.current=0;forceUpdate();toggleAnimation();}else{listOutput.current.value=\"Invalid\";}insertValue.current.value=null;insertIndex.current.value=null;}//function for a single step of insertion animation\nvar insertStep=function insertStep(){if(currentIndex.current===targetIndex.current-1){list.insertAt(animationValue.current,targetIndex.current);green.current=currentNode.current.next;toggleAnimation();}else{currentNode.current=currentNode.current.next;currentIndex.current++;}};function get(){if(animating.current)toggleAnimation();var index=parseInt(getIndex.current.value);if(isNaN(index))index=0;if(index>=0&&index<list.size){animationFunction.current=getStep;targetIndex.current=index;currentIndex.current=0;currentNode.current=list.head;forceUpdate();toggleAnimation();}else{listOutput.current.value=\"Invalid\";}getIndex.current.value=null;}//function for a single step of get animation\nvar getStep=function getStep(){if(targetIndex.current===currentIndex.current){if(yellow.current===null){yellow.current=currentNode.current;currentNode.current=null;}else{listOutput.current.value=list.get(targetIndex.current);toggleAnimation();}}else{currentNode.current=currentNode.current.next;currentIndex.current++;}};function remove(){if(animating.current)toggleAnimation();var index=parseInt(removeIndex.current.value);if(isNaN(index))index=0;if(index>=0&&index<list.size){animationFunction.current=removeStep;targetIndex.current=index;currentIndex.current=0;currentNode.current=list.head;forceUpdate();toggleAnimation();}else{listOutput.current.value=\"Invalid\";}removeIndex.current.value=null;}//function to do 1 step of remove animation\nvar removeStep=function removeStep(){if(targetIndex.current===currentIndex.current){if(pink.current===null){pink.current=currentNode.current;currentNode.current=null;}else{listOutput.current.value=list.get(targetIndex.current);list.remove(targetIndex.current);toggleAnimation();}}else{currentNode.current=currentNode.current.next;currentIndex.current++;}};//changes the animation speed when the slider changes\nvar updateSpeed=function updateSpeed(){if(animationFunction.current!=null){clearInterval(interval.current);interval.current=setInterval(function(){animationFunction.current();forceUpdate();},1000-speedSlider.current.value);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"linked-list\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"randomButton\",onClick:randomList,children:\"Random\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Size\"}),/*#__PURE__*/_jsx(\"input\",{id:\"randomSizeInput\",ref:randomSize,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"insertButton\",onClick:insert,children:\"Insert\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertIndex\",ref:insertIndex,type:\"text\"})]}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Value\"}),/*#__PURE__*/_jsx(\"input\",{id:\"insertValue\",ref:insertValue,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:remove,id:\"removeButton\",children:\"Remove\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"removeIndex\",ref:removeIndex,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{id:\"listOutput\",type:\"text\",ref:listOutput,readOnly:true}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"getButton\",onClick:get,children:\"Get\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Index\"}),/*#__PURE__*/_jsx(\"input\",{id:\"getIndex\",ref:getIndex,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledSlider\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Animation Speed\"}),/*#__PURE__*/_jsx(\"input\",{className:\"slider\",ref:speedSlider,onChange:updateSpeed,min:\"0\",max:\"990\",type:\"range\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization\",children:/*#__PURE__*/_jsx(LinkedListDisplay,{list:list,focus:currentNode.current,green:green.current,yellow:yellow.current,pink:pink.current})})]});};export default LinkedList;","map":{"version":3,"sources":["C:/Users/quint/Documents/Daily_Dose_of_Data/client/src/LinkedList/LinkedList.js"],"names":["React","useState","useRef","useEffect","useCallback","Element","Node","value","next","LinkedListClass","head","size","data","current","index","newNode","previous","i","curr","prev","LinkedListDisplay","props","list","componentList","focus","push","green","yellow","pink","LinkedList","setList","forceRender","randomSize","insertIndex","insertValue","removeIndex","listOutput","getIndex","speedSlider","interval","animationFunction","animationValue","targetIndex","animating","currentNode","currentIndex","forceUpdate","renders","randomList","toggleAnimation","randInt","isNaN","parseInt","newList","insertAt","min","max","Math","floor","random","clearInterval","setInterval","insert","insertStep","get","getStep","remove","removeStep","updateSpeed"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './LinkedList.scss';\r\nimport Element from '../Element/Element';\r\n\r\nclass Node {\r\n    constructor(value) {\r\n        this.value = value;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\nclass LinkedListClass {\r\n    constructor(head = null) {\r\n        this.head = head;\r\n        this.size = 0;\r\n    }\r\n\r\n    //for insertion at tail -- currently unused\r\n    insert(data) {\r\n        if (this.head == null) {\r\n            this.head = new Node(data);\r\n        }\r\n        else {\r\n            var current = this.head;\r\n            while (current.next != null) {\r\n                current = current.next;\r\n            }\r\n            current.next = new Node(data);\r\n        }\r\n        this.size++;\r\n    }\r\n\r\n    insertAt(data, index) {\r\n        var newNode = new Node(data);\r\n        var current = this.head;\r\n        var previous;\r\n\r\n        if (index <= this.size) {\r\n\r\n            if (index === 0) {\r\n                newNode.next = this.head;\r\n                this.head = newNode;\r\n            }\r\n            else {\r\n                var i = 0;\r\n                while (i < index) {\r\n                    i++;\r\n                    previous = current;\r\n                    current = current.next;\r\n                }\r\n                newNode.next = current;\r\n                previous.next = newNode;\r\n            }\r\n            this.size++;\r\n        }\r\n    }\r\n\r\n    get(index) {\r\n        var i = 0;\r\n        var current = this.head;\r\n        while (i !== index) {\r\n            current = current.next;\r\n            i++;\r\n        }\r\n        return current.value;\r\n    }\r\n\r\n    remove(index) {\r\n        var i = 0;\r\n        var curr, prev, next;\r\n        if (index < this.size && this.size > 0) {\r\n            if (index === 0) {\r\n                this.head = this.head.next;\r\n                this.size--;\r\n            }\r\n            else {\r\n                i++;\r\n                prev = this.head;\r\n                curr = prev.next;\r\n                next = curr.next;\r\n                while (i !== index) {\r\n                    i++;\r\n                    prev = prev.next;\r\n                    curr = curr.next;\r\n                    next = next.next;\r\n                }\r\n                prev.next = next;\r\n                this.size--;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst LinkedListDisplay = (props) => {\r\n    var current = props.list.head;\r\n    var index = 0;\r\n    var componentList = [];\r\n    while (current != null) {\r\n        if (current === props.focus) {\r\n            componentList.push(\r\n                <div key={2*index} className=\"labeledElement\">\r\n                    <label>{index}</label>\r\n                    <Element value={current.value} border=\"bordered\"></Element>\r\n                </div>\r\n            );\r\n        } else if (current === props.green) {\r\n            componentList.push(\r\n                <div key={2*index} className=\"labeledElement\">\r\n                    <label>{index}</label>\r\n                    <Element value={current.value} color=\"green\"></Element>\r\n                </div>\r\n            );\r\n        } else if (current === props.yellow) {\r\n            componentList.push(\r\n                <div key={2*index} className=\"labeledElement\">\r\n                    <label>{index}</label>\r\n                    <Element value={current.value} color=\"yellow\"></Element>\r\n                </div>\r\n            );\r\n        } else if (current === props.pink) {\r\n            componentList.push(\r\n                <div key={2*index} className=\"labeledElement\">\r\n                    <label>{index}</label>\r\n                    <Element value={current.value} color=\"pink\"></Element>\r\n                </div>\r\n            );\r\n        } else {\r\n            componentList.push(\r\n                <div key={2*index} className=\"labeledElement\">\r\n                    <label>{index}</label>\r\n                    <Element value={current.value}></Element>\r\n                </div>\r\n            );\r\n        }\r\n        componentList.push(\r\n            <p className=\"arrow\" key={2*index+1}>&#x2192;</p>\r\n        );\r\n        current = current.next;\r\n        index++;\r\n    }\r\n    componentList.push(<Element key={2*index} value=\"null\" />);\r\n    return componentList;\r\n\r\n    \r\n}\r\n\r\nconst LinkedList = () => {\r\n\r\n    const [list, setList] = useState(new LinkedListClass());\r\n    const [, forceRender] = useState(0);\r\n    const randomSize = useRef();\r\n    const insertIndex = useRef();\r\n    const insertValue = useRef();\r\n    const removeIndex = useRef();\r\n    const listOutput = useRef();\r\n    const getIndex = useRef();\r\n    const speedSlider = useRef();\r\n    const interval = useRef();\r\n    const animationFunction = useRef();\r\n    const animationValue = useRef();\r\n    const targetIndex = useRef();\r\n    const animating = useRef();\r\n    const currentNode = useRef();\r\n    const currentIndex = useRef();\r\n    const green = useRef();\r\n    const yellow = useRef(null);\r\n    const pink = useRef(null);\r\n\r\n    //We call update on fake state variable to force rerender\r\n    const forceUpdate = () => {\r\n        forceRender(renders => renders + 1);\r\n    }\r\n\r\n    //sets list to a randomly generated list\r\n    const randomList = () => {\r\n        if (animating.current)\r\n            toggleAnimation();\r\n        var size = randomSize.current.value;\r\n        if (size === \"\") {\r\n            size = randInt(8, 40);\r\n        }\r\n        if (!isNaN(parseInt(size)) && size > 0) {\r\n            var newList = new LinkedListClass();\r\n            for (let i = 0; i < size; i++)\r\n                newList.insertAt(randInt(-999,1000), 0);\r\n            setList(newList);\r\n        }\r\n        randomSize.current.value = null;\r\n    }\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max-min) + min);\r\n    }\r\n\r\n    //function to pause or continue animation\r\n    const toggleAnimation = useCallback(() => {\r\n        if (animating.current) {\r\n            clearInterval(interval.current);\r\n            animating.current = false;\r\n            animationFunction.current = null;\r\n            animationValue.current = null;\r\n            targetIndex.current = null;\r\n            currentNode.current = null;\r\n            currentIndex.current = null;\r\n            pink.current = null;\r\n        } else {\r\n            interval.current = setInterval(() => {\r\n                animationFunction.current();\r\n                forceUpdate();\r\n            }, 1000-speedSlider.current.value);\r\n            animating.current = true;\r\n            green.current = null;\r\n            yellow.current = null;\r\n        }\r\n    }, []);\r\n\r\n    //initialize list to random list\r\n    useEffect(randomList, [toggleAnimation]);\r\n\r\n    //insertion only occurs at head for now\r\n    function insert() {\r\n        if (animating.current)\r\n            toggleAnimation();\r\n        var data = parseInt(insertValue.current.value);\r\n        var index = parseInt(insertIndex.current.value);\r\n        if(isNaN(data))\r\n            data = randInt(-999,1000);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if (index === 0) {\r\n            list.insertAt(data, 0);\r\n            green.current = list.head;\r\n            yellow.current = null;\r\n            forceUpdate();\r\n        } else if (index > 0 && index < list.size) {\r\n            animationFunction.current = insertStep;\r\n            animationValue.current = data;\r\n            targetIndex.current = index;\r\n            currentNode.current = list.head;\r\n            currentIndex.current = 0;\r\n            forceUpdate();\r\n            toggleAnimation();\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        insertValue.current.value = null;\r\n        insertIndex.current.value = null;\r\n    }\r\n\r\n    //function for a single step of insertion animation\r\n    const insertStep = () => {\r\n        if(currentIndex.current === targetIndex.current-1) {\r\n            list.insertAt(animationValue.current, targetIndex.current);\r\n            green.current = currentNode.current.next;\r\n            toggleAnimation();\r\n        } else {\r\n            currentNode.current = currentNode.current.next;\r\n            currentIndex.current++;\r\n        }\r\n    }\r\n\r\n    function get() {\r\n        if (animating.current)\r\n            toggleAnimation();\r\n        var index = parseInt(getIndex.current.value);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if (index >= 0 && index < list.size) {\r\n            animationFunction.current = getStep;\r\n            targetIndex.current = index;\r\n            currentIndex.current = 0;\r\n            currentNode.current = list.head;\r\n            forceUpdate();\r\n            toggleAnimation();\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        getIndex.current.value = null;\r\n    }\r\n\r\n    //function for a single step of get animation\r\n    const getStep = () => {\r\n        if (targetIndex.current === currentIndex.current) {\r\n            if (yellow.current === null) {\r\n                yellow.current = currentNode.current;\r\n                currentNode.current = null;\r\n            } else {\r\n                listOutput.current.value = list.get(targetIndex.current);\r\n                toggleAnimation();\r\n            }\r\n        } else {\r\n            currentNode.current = currentNode.current.next;\r\n            currentIndex.current++;\r\n        }\r\n    }\r\n\r\n    function remove() {\r\n        if (animating.current)\r\n            toggleAnimation();\r\n        var index = parseInt(removeIndex.current.value);\r\n        if(isNaN(index))\r\n            index = 0;\r\n        if (index >= 0 && index < list.size) {\r\n            animationFunction.current = removeStep;\r\n            targetIndex.current = index;\r\n            currentIndex.current = 0;\r\n            currentNode.current = list.head;\r\n            forceUpdate();\r\n            toggleAnimation();\r\n        } else {\r\n            listOutput.current.value = \"Invalid\";\r\n        }\r\n        removeIndex.current.value = null;\r\n    }\r\n\r\n    //function to do 1 step of remove animation\r\n    const removeStep = () => {\r\n        if (targetIndex.current === currentIndex.current) {\r\n            if (pink.current === null) {\r\n                pink.current = currentNode.current;\r\n                currentNode.current = null;\r\n            } else {\r\n                listOutput.current.value = list.get(targetIndex.current);\r\n                list.remove(targetIndex.current);\r\n                toggleAnimation();\r\n            }\r\n        } else {\r\n            currentNode.current = currentNode.current.next;\r\n            currentIndex.current++;\r\n        }\r\n    }\r\n\r\n    //changes the animation speed when the slider changes\r\n    const updateSpeed = () => {\r\n        if (animationFunction.current != null) {\r\n            clearInterval(interval.current);\r\n            interval.current = setInterval(() => {\r\n                animationFunction.current();\r\n                forceUpdate();\r\n            }, 1000-speedSlider.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"linked-list\">\r\n            <div className=\"controls\">\r\n                <button id=\"randomButton\" onClick={randomList}>Random</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Size</label>\r\n                    <input id=\"randomSizeInput\" ref={randomSize} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button id=\"insertButton\" onClick={insert}>Insert</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"insertIndex\" ref={insertIndex} type=\"text\"></input>\r\n                </span>\r\n                <span className=\"labeledInput\">\r\n                    <label>Value</label>\r\n                    <input id=\"insertValue\" ref={insertValue} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <button onClick={remove} id=\"removeButton\" >Remove</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"removeIndex\" ref={removeIndex} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <input id=\"listOutput\" type=\"text\" ref={listOutput} readOnly></input>\r\n                <br />\r\n                <button id=\"getButton\" onClick={get} >Get</button>\r\n                <span className=\"labeledInput\">\r\n                    <label>Index</label>\r\n                    <input id=\"getIndex\" ref={getIndex} type=\"text\"></input>\r\n                </span>\r\n                <br />\r\n                <span className=\"labeledSlider\">\r\n                    <label>Animation Speed</label>\r\n                    <input className=\"slider\" ref={speedSlider} onChange={updateSpeed} min=\"0\" max=\"990\" type=\"range\"></input>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"visualization\">\r\n                <LinkedListDisplay list={list} focus={currentNode.current} green={green.current} yellow={yellow.current} pink={pink.current} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default LinkedList;"]},"metadata":{},"sourceType":"module"}