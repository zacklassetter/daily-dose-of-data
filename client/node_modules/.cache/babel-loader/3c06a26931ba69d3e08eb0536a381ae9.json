{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Daily_Dose_of_Data\\\\Client\\\\src\\\\Queue\\\\Queue.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Queue.scss';\nimport Element from '../Element/Element'; //define Queue Node class\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n\n} //define Queue class with linked list implementation\n\n\nclass QueueClass {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  enqueue(data) {\n    if (this.head == null) {\n      this.tail = new Node(data);\n      this.head = this.tail;\n    } else {\n      this.tail.next = new Node(data);\n      this.tail = this.tail.next;\n    }\n  }\n\n  dequeue() {\n    if (this.head == null) {\n      return undefined;\n    } else {\n      const temp = this.head;\n      this.head = this.head.next;\n      if (this.head == null) this.tail = null;\n      return temp.value;\n    }\n  }\n\n  peek() {\n    if (this.head == null) {\n      return undefined;\n    } else {\n      return this.head.value;\n    }\n  }\n\n} //returns a list of react element components from the queue component linked list\n\n\nconst QueueDisplay = props => {\n  var current = props.queue.head;\n  var index = 0;\n  var componentList = [];\n\n  while (current != null) {\n    componentList.push( /*#__PURE__*/_jsxDEV(Element, {\n      value: current.value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this));\n    current = current.next;\n    index++;\n  }\n\n  return componentList;\n}; //main react component for queue\n\n\n_c = QueueDisplay;\n\nconst Queue = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [queue, setQueue] = useState(new QueueClass());\n  const queueInput = useRef();\n  const queueOutput = useRef(); //We call update on fake state variable to force rerender\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  }; //sets queue to a randomly generated queue\n\n\n  const randomQueue = () => {\n    const size = randInt(10, 60);\n    var newQueue = new QueueClass();\n\n    for (let i = 0; i < size; i++) newQueue.enqueue(randInt(-999, 1000));\n\n    setQueue(newQueue);\n  };\n\n  const randInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  }; //initialize queue to random queue\n\n\n  useEffect(randomQueue, []);\n\n  const enqueue = () => {\n    var data = parseInt(queueInput.current.value);\n    if (isNaN(data)) data = 0;\n    queue.enqueue(data);\n    forceUpdate();\n    queueInput.current.value = null;\n  };\n\n  const dequeue = () => {\n    const data = queue.dequeue();\n    forceUpdate();\n    if (data === undefined) queueOutput.current.value = \"None\";else queueOutput.current.value = data;\n  };\n\n  const peek = () => {\n    const data = queue.peek();\n    if (data === undefined) queueOutput.current.value = \"None\";else queueOutput.current.value = data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"randomButton\",\n        onClick: randomQueue,\n        children: \"Random\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"enqueueButton\",\n        onClick: enqueue,\n        children: \"Enqueue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queueInput\",\n        ref: queueInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"dequeueButton\",\n        onClick: dequeue,\n        children: \"Dequeue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queueOutput\",\n        ref: queueOutput,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"peekButton\",\n        onClick: peek,\n        children: \"Peek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"queueEnd\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Dequeue \\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(QueueDisplay, {\n        queue: queue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"queueEnd\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2190 Enqueue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Queue, \"XHb28AR6tdtXKZz0YTR/1ui5gmE=\");\n\n_c2 = Queue;\nexport default Queue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueueDisplay\");\n$RefreshReg$(_c2, \"Queue\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Daily_Dose_of_Data/Client/src/Queue/Queue.js"],"names":["React","useState","useRef","useEffect","Element","Node","constructor","value","next","QueueClass","head","tail","enqueue","data","dequeue","undefined","temp","peek","QueueDisplay","props","current","queue","index","componentList","push","Queue","forceRender","setQueue","queueInput","queueOutput","forceUpdate","renders","randomQueue","size","randInt","newQueue","i","min","max","Math","floor","random","parseInt","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './Queue.scss';\r\nimport Element from '../Element/Element';\r\n\r\n//define Queue Node class\r\nclass Node {\r\n    constructor(value) {\r\n        this.value = value;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\n//define Queue class with linked list implementation\r\nclass QueueClass {\r\n    constructor() {\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    enqueue (data) {\r\n        if (this.head == null) {\r\n            this.tail = new Node(data);\r\n            this.head = this.tail;\r\n        } else {\r\n            this.tail.next = new Node(data);\r\n            this.tail = this.tail.next;\r\n        }\r\n    }\r\n    dequeue () {\r\n        if (this.head == null) {\r\n            return undefined;\r\n        } else {\r\n            const temp = this.head;\r\n            this.head = this.head.next;\r\n            if (this.head == null)\r\n                this.tail = null;\r\n            return temp.value;\r\n        }\r\n    }\r\n    peek () {\r\n        if (this.head == null) {\r\n            return undefined;\r\n        } else {\r\n            return this.head.value;\r\n        }\r\n    }\r\n}\r\n\r\n//returns a list of react element components from the queue component linked list\r\nconst QueueDisplay = (props) => {\r\n\tvar current = props.queue.head;\r\n    var index = 0;\r\n    var componentList = [];\r\n    while(current != null) {\r\n        componentList.push(<Element key={index} value={current.value} />);\r\n        current = current.next;\r\n        index++;\r\n    }\r\n    return componentList;\r\n}\r\n\r\n//main react component for queue\r\nconst Queue = () => {\r\n\t\r\n\tconst [, forceRender] = useState(0);\r\n\tconst [queue, setQueue] = useState(new QueueClass());\r\n\tconst queueInput = useRef();\r\n\tconst queueOutput = useRef();\r\n\t\r\n\t//We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\t\r\n\t//sets queue to a randomly generated queue\r\n    const randomQueue = () => {\r\n        const size = randInt(10, 60);\r\n        var newQueue = new QueueClass();\r\n        for (let i = 0; i < size; i++)\r\n            newQueue.enqueue(randInt(-999,1000));\r\n        setQueue(newQueue);\r\n    }\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max-min) + min);\r\n    }\r\n\r\n    //initialize queue to random queue\r\n    useEffect(randomQueue, []);\r\n\r\n\tconst enqueue = () => {\r\n\t\tvar data = parseInt(queueInput.current.value);\r\n        if(isNaN(data))\r\n            data = 0;\r\n\t\tqueue.enqueue(data);\r\n\t\tforceUpdate();\r\n\t\tqueueInput.current.value = null;\r\n\t}\r\n\t\r\n\tconst dequeue = () => {\r\n\t\tconst data = queue.dequeue();\r\n\t\tforceUpdate();\r\n\t\tif (data === undefined)\r\n\t\t\tqueueOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tqueueOutput.current.value = data;\r\n\t}\r\n\t\r\n\tconst peek = () => {\r\n\t\tconst data = queue.peek();\r\n\t\tif (data === undefined)\r\n\t\t\tqueueOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tqueueOutput.current.value = data;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"queue\">\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<button id=\"randomButton\" onClick={randomQueue}>Random</button>\r\n                <br />\r\n\t\t\t\t<button id=\"enqueueButton\" onClick={enqueue}>Enqueue</button>\r\n\t\t\t\t<input id=\"queueInput\" ref={queueInput} type=\"text\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"dequeueButton\" onClick={dequeue}>Dequeue</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input id=\"queueOutput\" ref={queueOutput} type=\"text\" readOnly />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"peekButton\" onClick={peek}>Peek</button>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"visualization\">\r\n\t\t\t\t<div className=\"queueEnd\">\r\n                <p>Dequeue &#x2190;</p>\r\n                </div>\r\n                <QueueDisplay queue={queue} />\r\n\t\t\t\t<div className=\"queueEnd\">\r\n\t\t\t\t\t<p>&#x2190; Enqueue</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Queue;"]},"metadata":{},"sourceType":"module"}