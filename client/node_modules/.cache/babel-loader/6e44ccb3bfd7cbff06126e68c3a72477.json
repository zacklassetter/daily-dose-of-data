{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\ReactApp\\\\src\\\\BubbleSort\\\\BubbleSort.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './BubbleSort.scss';\nimport Element from '../Element/Element';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BubbleSortDisplay = props => {\n  return props.array.map((value, index) => {\n    if (index > props.sortedStart.current) {\n      return /*#__PURE__*/_jsxDEV(Element, {\n        value: value,\n        color: \"green\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (index === props.focusOne.current || index === props.focusTwo.current) {\n      if (index === props.min.current) {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          value: value,\n          color: \"pink\",\n          border: \"bordered\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n      }\n\n      if (index === props.max.current) {\n        return /*#__PURE__*/_jsxDEV(Element, {\n          value: value,\n          color: \"yellow\",\n          border: \"bordered\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(Element, {\n        value: value,\n        border: \"bordered\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Element, {\n      value: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  });\n};\n\n_c = BubbleSortDisplay;\n\nconst BubbleSort = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [array, setArray] = useState([]);\n  const [sorted, setSorted] = useState(false);\n  const sorting = useRef(false);\n  const interval = useRef(null);\n  const swappedOnPass = useRef(false);\n  const sortedStart = useRef(array.length - 1);\n  const focusOne = useRef(-1);\n  const focusTwo = useRef(-1);\n  const min = useRef(-1);\n  const max = useRef(-1);\n  const toggleSortingButton = useRef();\n  const generateArrayButton = useRef();\n  const arraySizeInput = useRef();\n  const speedSlider = useRef(); //We call update on fake state variable to force rerender\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  }; //initializes a random array for sorting\n\n\n  const generateArray = () => {\n    if (sorting.current) {\n      toggleSorting();\n    }\n\n    const size = parseInt(arraySizeInput.current.value);\n\n    if (!isNaN(size) && size > 0) {\n      var newArray = new Array(size);\n\n      for (let i = 0; i < size; i++) {\n        newArray[i] = randInt(-999, 1000);\n      }\n\n      setArray(newArray);\n      setSorted(false);\n      sortedStart.current = newArray.length - 1;\n      focusOne.current = -1;\n      focusTwo.current = -1;\n      min.current = -1;\n      max.current = -1; //swappedOnPass.current = false;\n      //sorting.current = false;\n      //currentMinimum.current = -1;\n    }\n\n    arraySizeInput.current.value = null;\n  };\n\n  const randInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min) + min);\n  };\n\n  function swap(arr, x, y) {\n    var temp = arr[x];\n    arr[x] = arr[y];\n    arr[y] = temp;\n  } //completes one step of the sorting algorithm\n\n\n  const sortingStep = () => {\n    if (max.current === 1 && sortedStart.current === 1) {\n      sortedStart.current = -1;\n      return;\n    }\n\n    if (sortedStart.current <= 0) {\n      setSorted(true);\n      toggleSorting();\n      return;\n    }\n\n    if (focusOne.current === -1 && focusTwo.current === -1) {\n      focusOne.current = 0;\n      focusTwo.current = 1;\n      return;\n    }\n\n    if (max.current >= sortedStart.current) {\n      if (swappedOnPass.current === false) {\n        sortedStart.current = -1;\n      }\n\n      min.current = -1;\n      max.current = -1;\n      focusOne.current = 0;\n      focusTwo.current = 1;\n      swappedOnPass.current = false;\n      sortedStart.current--;\n    }\n\n    if (min.current === -1) {\n      if (array[focusOne.current] < array[focusTwo.current]) {\n        min.current = focusOne.current;\n        max.current = focusTwo.current;\n      } else {\n        min.current = focusTwo.current;\n        max.current = focusOne.current;\n      }\n    } else if (min.current > max.current) {\n      swap(array, min.current, max.current);\n      swappedOnPass.current = true;\n      var temp = max.current;\n      max.current = min.current;\n      min.current = temp;\n    } else {\n      min.current = -1;\n      max.current = -1;\n      focusOne.current++;\n      focusTwo.current++;\n    }\n  }; //function to turn sorting on and off by button click\n\n\n  const toggleSorting = () => {\n    if (sorting.current) {\n      clearInterval(interval.current);\n      sorting.current = false;\n      toggleSortingButton.current.innerHTML = \"Sort\";\n      toggleSortingButton.current.classList.remove(\"pinkButton\");\n      toggleSortingButton.current.classList.add(\"greenButton\");\n    } else if (!sorted) {\n      interval.current = setInterval(() => {\n        sortingStep();\n        forceUpdate();\n      }, 1000 - speedSlider.current.value);\n      sorting.current = true;\n      toggleSortingButton.current.innerHTML = \"Stop\";\n      toggleSortingButton.current.classList.remove(\"greenButton\");\n      toggleSortingButton.current.classList.add(\"pinkButton\");\n    }\n  }; //changes the animation speed of sorting when the slider changes\n\n\n  const updateSpeed = () => {\n    if (sorting.current) {\n      clearInterval(interval.current);\n      interval.current = setInterval(() => {\n        sortingStep();\n        forceUpdate();\n      }, 1000 - speedSlider.current.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bubble-sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"generateArrayButton\",\n          ref: generateArrayButton,\n          onClick: generateArray,\n          children: \"Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"labeledInput\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Array Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"arraySizeInput\",\n            ref: arraySizeInput,\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"toggleSortingButton\",\n          className: \"greenButton\",\n          ref: toggleSortingButton,\n          onClick: toggleSorting,\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"labeledSlider\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Animation Speed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"slider\",\n            ref: speedSlider,\n            onChange: updateSpeed,\n            min: \"0\",\n            max: \"990\",\n            type: \"range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization\",\n        children: /*#__PURE__*/_jsxDEV(BubbleSortDisplay, {\n          array: array,\n          sortedStart: sortedStart,\n          focusOne: focusOne,\n          focusTwo: focusTwo,\n          min: min,\n          max: max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"legend\",\n      children: [/*#__PURE__*/_jsxDEV(Element, {\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Sorted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Unsorted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        border: \"bordered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Current Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Lesser of Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Element, {\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"= Greater of Focuses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BubbleSort, \"ZEfOnW0UT3e8M9ZTHyeGCoryYd0=\");\n\n_c2 = BubbleSort;\nexport default BubbleSort;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BubbleSortDisplay\");\n$RefreshReg$(_c2, \"BubbleSort\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/ReactApp/src/BubbleSort/BubbleSort.js"],"names":["React","useState","useRef","Element","BubbleSortDisplay","props","array","map","value","index","sortedStart","current","focusOne","focusTwo","min","max","BubbleSort","forceRender","setArray","sorted","setSorted","sorting","interval","swappedOnPass","length","toggleSortingButton","generateArrayButton","arraySizeInput","speedSlider","forceUpdate","renders","generateArray","toggleSorting","size","parseInt","isNaN","newArray","Array","i","randInt","Math","floor","random","swap","arr","x","y","temp","sortingStep","clearInterval","innerHTML","classList","remove","add","setInterval","updateSpeed"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './BubbleSort.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst BubbleSortDisplay = (props) => {\r\n    return props.array.map((value, index) => {\r\n        if (index > props.sortedStart.current) {\r\n            return <Element key={index} value={value} color=\"green\"/>\r\n        }\r\n        if (index === props.focusOne.current || index === props.focusTwo.current) {\r\n            if (index === props.min.current) {\r\n                return <Element key={index} value={value} color=\"pink\" border=\"bordered\" />\r\n            }\r\n            if (index === props.max.current) {\r\n                return <Element key={index} value={value} color=\"yellow\" border=\"bordered\" />\r\n            }\r\n            else return <Element key={index} value={value} border=\"bordered\" />\r\n            \r\n        }\r\n        return <Element key={index} value={value} />\r\n    });\r\n}\r\n\r\n\r\n\r\nconst BubbleSort = () => {\r\n    const [, forceRender] = useState(0);\r\n    const [array, setArray] = useState([]);\r\n    const [sorted, setSorted] = useState(false);\r\n    const sorting = useRef(false);\r\n    const interval = useRef(null);\r\n    const swappedOnPass = useRef(false);\r\n    const sortedStart = useRef(array.length - 1);\r\n    const focusOne = useRef(-1);\r\n    const focusTwo = useRef(-1);\r\n    const min = useRef(-1);\r\n    const max = useRef(-1);\r\n    const toggleSortingButton = useRef();\r\n    const generateArrayButton = useRef();\r\n    const arraySizeInput = useRef();\r\n    const speedSlider = useRef();\r\n    \r\n    //We call update on fake state variable to force rerender\r\n    const forceUpdate = () => {\r\n        forceRender(renders => renders + 1);\r\n    }\r\n    //initializes a random array for sorting\r\n    const generateArray = () => {\r\n        if (sorting.current) {\r\n            toggleSorting();\r\n        }\r\n        const size = parseInt(arraySizeInput.current.value);\r\n        if (!isNaN(size) && size > 0) {\r\n            var newArray = new Array(size);\r\n            for (let i = 0; i < size; i++) {\r\n                newArray[i] = randInt(-999, 1000);\r\n            }\r\n            setArray(newArray);\r\n            setSorted(false);\r\n            sortedStart.current = newArray.length - 1;\r\n            focusOne.current = -1;\r\n            focusTwo.current = -1;\r\n            min.current = -1;\r\n            max.current = -1\r\n            //swappedOnPass.current = false;\r\n            //sorting.current = false;\r\n            //currentMinimum.current = -1;\r\n        }\r\n        arraySizeInput.current.value = null;\r\n    }\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    function swap(arr, x, y) {\r\n        var temp = arr[x];\r\n        arr[x] = arr[y];\r\n        arr[y] = temp;\r\n    }\r\n\r\n    //completes one step of the sorting algorithm\r\n    const sortingStep = () => {\r\n        if (max.current === 1 && sortedStart.current === 1) {\r\n            sortedStart.current = -1;\r\n            return;\r\n        }\r\n\r\n        if (sortedStart.current <= 0) {\r\n            setSorted(true);\r\n            toggleSorting();\r\n            return;\r\n        }\r\n        if (focusOne.current === -1 && focusTwo.current === -1){\r\n            focusOne.current = 0;\r\n            focusTwo.current = 1;\r\n            return;\r\n        }\r\n        if (max.current >= sortedStart.current) {\r\n            if (swappedOnPass.current === false) {\r\n                sortedStart.current = -1;\r\n            }\r\n\r\n            min.current = -1;\r\n            max.current = -1;\r\n            focusOne.current = 0;\r\n            focusTwo.current = 1;\r\n            swappedOnPass.current = false;\r\n            sortedStart.current--;\r\n            \r\n        }\r\n        if (min.current === -1) {\r\n            if (array[focusOne.current] < array[focusTwo.current]) {\r\n                min.current = focusOne.current;\r\n                max.current = focusTwo.current;\r\n            }\r\n            else {\r\n                min.current = focusTwo.current;\r\n                max.current = focusOne.current;\r\n            }\r\n        }\r\n        else if (min.current > max.current) {\r\n            swap(array, min.current, max.current);\r\n            swappedOnPass.current = true;\r\n            var temp = max.current;\r\n            max.current = min.current;\r\n            min.current = temp;\r\n        } \r\n        else {\r\n            min.current = -1;\r\n            max.current = -1;\r\n            focusOne.current++;\r\n            focusTwo.current++;\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    //function to turn sorting on and off by button click\r\n    const toggleSorting = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            sorting.current = false;\r\n            toggleSortingButton.current.innerHTML = \"Sort\";\r\n            toggleSortingButton.current.classList.remove(\"pinkButton\");\r\n            toggleSortingButton.current.classList.add(\"greenButton\");\r\n        }\r\n        else if (!sorted) {\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000 - speedSlider.current.value);\r\n            sorting.current = true;\r\n            toggleSortingButton.current.innerHTML = \"Stop\";\r\n            toggleSortingButton.current.classList.remove(\"greenButton\");\r\n            toggleSortingButton.current.classList.add(\"pinkButton\");\r\n        }\r\n    }\r\n\r\n    //changes the animation speed of sorting when the slider changes\r\n    const updateSpeed = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000 - speedSlider.current.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bubble-sort\">\r\n            <div id=\"main\">\r\n                <div className=\"controls\">\r\n                    <button id=\"generateArrayButton\" ref={generateArrayButton} onClick={generateArray}>Random</button>\r\n                    <span className=\"labeledInput\">\r\n                        <label>Array Size</label>\r\n                        <input id=\"arraySizeInput\" ref={arraySizeInput} type=\"text\"></input>\r\n                    </span>\r\n                    <br />\r\n                    <button id=\"toggleSortingButton\" className=\"greenButton\" ref={toggleSortingButton} onClick={toggleSorting}>Sort</button>\r\n                    <br />\r\n                    <span className=\"labeledSlider\">\r\n                        <label>Animation Speed</label>\r\n                        <input className=\"slider\" ref={speedSlider} onChange={updateSpeed} min=\"0\" max=\"990\" type=\"range\"></input>\r\n                    </span>\r\n                </div>\r\n                <div className=\"visualization\">\r\n                    <BubbleSortDisplay array={array} sortedStart={sortedStart} focusOne={focusOne} focusTwo={focusTwo} min={min} max={max}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"legend\">\r\n                <Element color=\"green\"></Element>\r\n                <p>= Sorted</p>\r\n                < br />\r\n                <Element></Element>\r\n                <p>= Unsorted</p>\r\n                <br />\r\n                <Element border=\"bordered\"></Element>\r\n                <p>= Current Focuses</p>\r\n                <br />\r\n                <Element color=\"pink\"></Element>\r\n                <p>= Lesser of Focuses</p>\r\n                <br />\r\n                <Element color=\"yellow\"></Element>\r\n                <p>= Greater of Focuses</p>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default BubbleSort;"]},"metadata":{},"sourceType":"module"}