{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ArrayListInformation=function ArrayListInformation(){return/*#__PURE__*/_jsxs(\"div\",{className:\"information\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"An Array List is a linear data structure. Values are stored in an array structure using a contiguous block of memory. An Array List is one possible implementation of a List, an Abstract Data Type (ADT).\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"u\",{children:\"An Array List has the following basic operations:\"})}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Insert:\"}),\" inserts an element into the array list at a specific index\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Remove:\"}),\" removes an element from the array list at a specific index\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Get:\"}),\" returns an element from the array list at a specific index without removing it\"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"Since the information in an array list is stored contiguously in an array, it benefits from random access. Consequently, operations such as accessing an element from a given index are very inexpensive. The trade off for this is that insertion and deletion become expensive operations since they require creating a new array or copying several elements to new locations in memory.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Operation\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Complexity\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Insert at head\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Remove at head\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Get from head\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(1)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Insert at given index\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Remove at given index\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Get from given index\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(1)\"})]})]})})]});};export default ArrayListInformation;","map":{"version":3,"sources":["C:/Users/quint/Documents/Daily_Dose_of_Data/client/src/ArrayList/ArrayListInformation.js"],"names":["React","ArrayListInformation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CAC/B,mBACI,aAAK,SAAS,CAAC,aAAf,wBACI,iOADJ,cAEI,aAFJ,cAGI,gCAAG,wEAAH,EAHJ,cAII,mCACI,mCAAI,8BAAJ,iEADJ,cAEI,mCAAI,8BAAJ,iEAFJ,cAGI,mCAAI,2BAAJ,qFAHJ,GAJJ,cASI,aATJ,cAUI,kZAVJ,cAWI,aAXJ,cAYI,oCACI,sCACI,mCAAI,iCAAJ,cAAsB,kCAAtB,GADJ,cAEI,mCAAI,sCAAJ,cAA2B,4BAA3B,GAFJ,cAGI,mCAAI,sCAAJ,cAA2B,4BAA3B,GAHJ,cAII,mCAAI,qCAAJ,cAA0B,4BAA1B,GAJJ,cAKI,mCAAI,6CAAJ,cAAkC,4BAAlC,GALJ,cAMI,mCAAI,6CAAJ,cAAkC,4BAAlC,GANJ,cAOI,mCAAI,4CAAJ,cAAiC,4BAAjC,GAPJ,GADJ,EAZJ,GADJ,CA0BH,CA3BD,CA6BA,cAAeA,CAAAA,oBAAf","sourcesContent":["import React from 'react';\r\n\r\nconst ArrayListInformation = () => {\r\n    return (\r\n        <div className=\"information\">\r\n            <p>An Array List is a linear data structure. Values are stored in an array structure using a contiguous block of memory. An Array List is one possible implementation of a List, an Abstract Data Type (ADT).</p>\r\n            <br />\r\n            <p><u>An Array List has the following basic operations:</u></p>\r\n            <ul>\r\n                <li><b>Insert:</b> inserts an element into the array list at a specific index</li>\r\n                <li><b>Remove:</b> removes an element from the array list at a specific index</li>\r\n                <li><b>Get:</b> returns an element from the array list at a specific index without removing it</li>\r\n            </ul>\r\n            <br />\r\n            <p>Since the information in an array list is stored contiguously in an array, it benefits from random access. Consequently, operations such as accessing an element from a given index are very inexpensive. The trade off for this is that insertion and deletion become expensive operations since they require creating a new array or copying several elements to new locations in memory.</p>\r\n            <br />\r\n            <table>\r\n                <tbody>\r\n                    <tr><th>Operation</th><th>Complexity</th></tr>\r\n                    <tr><td>Insert at head</td><td>O(n)</td></tr>\r\n                    <tr><td>Remove at head</td><td>O(n)</td></tr>\r\n                    <tr><td>Get from head</td><td>O(1)</td></tr>\r\n                    <tr><td>Insert at given index</td><td>O(n)</td></tr>\r\n                    <tr><td>Remove at given index</td><td>O(n)</td></tr>\r\n                    <tr><td>Get from given index</td><td>O(1)</td></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArrayListInformation;"]},"metadata":{},"sourceType":"module"}