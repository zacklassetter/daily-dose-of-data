{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\ReactApp\\\\src\\\\SelectionSort\\\\SelectionSort.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './SelectionSort.scss';\nimport Element from '../Element/Element';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectionSortDisplay = props => {\n  return props.array.map((value, index) => {\n    if (index < props.sortedEndIndex) return /*#__PURE__*/_jsxDEV(Element, {\n      value: value,\n      color: \"green\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 20\n    }, this);\n    if (index === props.currentFocus) return /*#__PURE__*/_jsxDEV(Element, {\n      value: value,\n      bordered: true\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 20\n    }, this);\n    if (index === props.currentMinimum) return /*#__PURE__*/_jsxDEV(Element, {\n      value: value,\n      color: \"pink\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 20\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Element, {\n      value: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  });\n};\n\n_c = SelectionSortDisplay;\n\nconst SelectionSort = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [array] = useState([3, 7, 2, -3, 0, 22, 5, 1, -8, 9]);\n  const [sorting, setSorting] = useState(false);\n  const [interval, storeInterval] = useState(null);\n  const [sortedEndIndex, setSortedEndIndex] = useState(0);\n  const [currentFocus, setCurrentFocus] = useState(-1);\n  const [currentMinimum, setCurrentMinimum] = useState(-1);\n  const toggleSortingButton = useRef(); //We call update on fake state variable to force rerender\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  };\n\n  const sortingStep = () => {\n    console.log(currentFocus);\n    setCurrentFocus(currentFocus => currentFocus + 1);\n    if (currentMinimum === -1) setCurrentMinimum(currentFocus);\n  }; //function to turn sorting on and off by button click\n\n\n  const toggleSorting = () => {\n    if (sorting) {\n      clearInterval(interval);\n      setSorting(false);\n      toggleSortingButton.current.innerHTML = \"Start\";\n    } else {\n      storeInterval(setInterval(() => {\n        sortingStep();\n        forceUpdate();\n      }, 1000));\n      setSorting(true);\n      toggleSortingButton.current.innerHTML = \"Stop\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selection-sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: toggleSortingButton,\n        onClick: toggleSorting,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\",\n      children: /*#__PURE__*/_jsxDEV(SelectionSortDisplay, {\n        array: array,\n        sortedEndIndex: sortedEndIndex,\n        currentFocus: currentFocus,\n        currentMinimum: currentMinimum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectionSort, \"PpaVxdJVzGUSfHR5f6GcihSvwH4=\");\n\n_c2 = SelectionSort;\nexport default SelectionSort;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SelectionSortDisplay\");\n$RefreshReg$(_c2, \"SelectionSort\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/ReactApp/src/SelectionSort/SelectionSort.js"],"names":["React","useState","useRef","Element","SelectionSortDisplay","props","array","map","value","index","sortedEndIndex","currentFocus","currentMinimum","SelectionSort","forceRender","sorting","setSorting","interval","storeInterval","setSortedEndIndex","setCurrentFocus","setCurrentMinimum","toggleSortingButton","forceUpdate","renders","sortingStep","console","log","toggleSorting","clearInterval","current","innerHTML","setInterval"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './SelectionSort.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst SelectionSortDisplay = (props) => {\r\n    return props.array.map((value, index) => {\r\n        if (index < props.sortedEndIndex)\r\n            return <Element key={index} value={value} color=\"green\" />\r\n        if (index === props.currentFocus)\r\n            return <Element key={index} value={value} bordered={true} />\r\n        if (index === props.currentMinimum)\r\n            return <Element key={index} value={value} color=\"pink\" />\r\n        return <Element key={index} value={value} />\r\n    });\r\n}\r\n\r\nconst SelectionSort = () => {\r\n\r\n    const [, forceRender] = useState(0);\r\n    const [array,] = useState([3,7,2,-3,0,22,5,1,-8,9]);\r\n    const [sorting, setSorting] = useState(false);\r\n    const [interval, storeInterval] = useState(null);\r\n    const [sortedEndIndex, setSortedEndIndex] = useState(0);\r\n    const [currentFocus, setCurrentFocus] = useState(-1);\r\n    const [currentMinimum, setCurrentMinimum] = useState(-1);\r\n    const toggleSortingButton = useRef();\r\n\r\n    //We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\r\n    const sortingStep = () => {\r\n        console.log(currentFocus);\r\n        setCurrentFocus(currentFocus => currentFocus+1);\r\n        if (currentMinimum === -1)\r\n            setCurrentMinimum(currentFocus);\r\n    }\r\n\r\n    //function to turn sorting on and off by button click\r\n    const toggleSorting = () => {\r\n        if (sorting) {\r\n            clearInterval(interval);\r\n            setSorting(false);\r\n            toggleSortingButton.current.innerHTML = \"Start\";\r\n        } else {\r\n            storeInterval(setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000));\r\n            setSorting(true);\r\n            toggleSortingButton.current.innerHTML = \"Stop\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"selection-sort\">\r\n            <div className=\"controls\">\r\n                <button ref={toggleSortingButton} onClick={toggleSorting}>Start</button>\r\n            </div>\r\n            <div className=\"visualization\">\r\n                <SelectionSortDisplay array={array} sortedEndIndex={sortedEndIndex} currentFocus = {currentFocus} currentMinimum={currentMinimum} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectionSort;"]},"metadata":{},"sourceType":"module"}