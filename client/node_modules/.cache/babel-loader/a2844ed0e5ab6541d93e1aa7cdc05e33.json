{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Daily_Dose_of_Data\\\\ReactApp\\\\src\\\\HashTable\\\\HashTable.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport './HashTable.scss';\nimport Element from '../Element/Element'; //class for a hash table with linear probing\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HashTableClass {\n  constructor(size, loadFactor) {\n    this.array = new Array(size);\n    this.elements = 0;\n    this.size = size;\n    this.LOADFACTOR = loadFactor;\n  }\n\n  hash(value) {\n    return value % this.size;\n  }\n\n  resize() {\n    let oldArray = this.array;\n    this.array = new Array(2 * this.size);\n    this.size = 2 * this.size;\n\n    for (let i = 0; i < oldArray.length; i++) if (oldArray[i] !== undefined) this.insert(oldArray[i]);\n  }\n\n  insert(value) {\n    let hashCode = this.hash(value);\n\n    if (this.array[hashCode] === undefined) {\n      this.array[hashCode] = value;\n      return hashCode;\n    } else {}\n\n    this.elements++;\n    if (this.elements / this.size > this.LOADFACTOR) this.resize();\n  }\n\n  remove(value) {}\n\n  contains(value) {}\n\n} //react component to display a hashtable\n\n\nconst HashTableDisplay = props => {}; //react component for hash table visualization\n\n\n_c = HashTableDisplay;\n\nconst HashTable = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hash-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = HashTable;\nexport default HashTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HashTableDisplay\");\n$RefreshReg$(_c2, \"HashTable\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Daily_Dose_of_Data/ReactApp/src/HashTable/HashTable.js"],"names":["React","useState","useRef","useEffect","Element","HashTableClass","constructor","size","loadFactor","array","Array","elements","LOADFACTOR","hash","value","resize","oldArray","i","length","undefined","insert","hashCode","remove","contains","HashTableDisplay","props","HashTable"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,kBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;;;AACA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAAEC,IAAF,EAAQC,UAAR,EAAoB;AAC3B,SAAKC,KAAL,GAAa,IAAIC,KAAJ,CAAUH,IAAV,CAAb;AACA,SAAKI,QAAL,GAAgB,CAAhB;AACA,SAAKJ,IAAL,GAAYA,IAAZ;AACA,SAAKK,UAAL,GAAkBJ,UAAlB;AACH;;AAEDK,EAAAA,IAAI,CAAEC,KAAF,EAAS;AACT,WAAOA,KAAK,GAAG,KAAKP,IAApB;AACH;;AAEDQ,EAAAA,MAAM,GAAI;AACN,QAAIC,QAAQ,GAAG,KAAKP,KAApB;AACA,SAAKA,KAAL,GAAa,IAAIC,KAAJ,CAAU,IAAE,KAAKH,IAAjB,CAAb;AACA,SAAKA,IAAL,GAAY,IAAE,KAAKA,IAAnB;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EACI,IAAID,QAAQ,CAACC,CAAD,CAAR,KAAgBE,SAApB,EACI,KAAKC,MAAL,CAAYJ,QAAQ,CAACC,CAAD,CAApB;AACX;;AAEDG,EAAAA,MAAM,CAAEN,KAAF,EAAS;AACX,QAAIO,QAAQ,GAAG,KAAKR,IAAL,CAAUC,KAAV,CAAf;;AACA,QAAI,KAAKL,KAAL,CAAWY,QAAX,MAAyBF,SAA7B,EAAwC;AACpC,WAAKV,KAAL,CAAWY,QAAX,IAAuBP,KAAvB;AACA,aAAOO,QAAP;AACH,KAHD,MAGO,CAEN;;AACD,SAAKV,QAAL;AACA,QAAI,KAAKA,QAAL,GAAc,KAAKJ,IAAnB,GAA0B,KAAKK,UAAnC,EACI,KAAKG,MAAL;AACP;;AAEDO,EAAAA,MAAM,CAAER,KAAF,EAAS,CAEd;;AAEDS,EAAAA,QAAQ,CAAET,KAAF,EAAS,CAEhB;;AAxCgB,C,CA2CrB;;;AACA,MAAMU,gBAAgB,GAAIC,KAAD,IAAW,CAEnC,CAFD,C,CAIA;;;KAJMD,gB;;AAKN,MAAME,SAAS,GAAG,MAAM;AAEpB,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbD;;MAAMA,S;AAeN,eAAeA,SAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './HashTable.scss';\r\nimport Element from '../Element/Element';\r\n\r\n//class for a hash table with linear probing\r\nclass HashTableClass {\r\n    constructor (size, loadFactor) {\r\n        this.array = new Array(size);\r\n        this.elements = 0;\r\n        this.size = size;\r\n        this.LOADFACTOR = loadFactor;\r\n    }\r\n\r\n    hash (value) {\r\n        return value % this.size;\r\n    }\r\n\r\n    resize () {\r\n        let oldArray = this.array;\r\n        this.array = new Array(2*this.size);\r\n        this.size = 2*this.size;\r\n        for (let i = 0; i < oldArray.length; i++)\r\n            if (oldArray[i] !== undefined)\r\n                this.insert(oldArray[i]);\r\n    }\r\n\r\n    insert (value) {\r\n        let hashCode = this.hash(value);\r\n        if (this.array[hashCode] === undefined) {\r\n            this.array[hashCode] = value;\r\n            return hashCode;\r\n        } else {\r\n\r\n        }\r\n        this.elements++;\r\n        if (this.elements/this.size > this.LOADFACTOR)\r\n            this.resize();\r\n    }\r\n\r\n    remove (value) {\r\n\r\n    }\r\n\r\n    contains (value) {\r\n\r\n    }\r\n}\r\n\r\n//react component to display a hashtable\r\nconst HashTableDisplay = (props) => {\r\n\r\n}\r\n\r\n//react component for hash table visualization\r\nconst HashTable = () => {\r\n\r\n    return (\r\n        <div className=\"hash-table\">\r\n            <div className=\"controls\">\r\n\r\n            </div>\r\n            <div className=\"visualization\">\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HashTable;"]},"metadata":{},"sourceType":"module"}