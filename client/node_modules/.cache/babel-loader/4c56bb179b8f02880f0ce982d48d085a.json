{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MapInformation=function MapInformation(){return/*#__PURE__*/_jsxs(\"div\",{className:\"information\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"A Map is an Abstract Data Type (ADT) representing a collection of key and value pairs. Any value in the Map can be accessed using its corresponding key. Keys in a map must be unique, meaning each key can only have one corresponding value. The key value pairs in a map are stored in no particular order, they are simply a collection of data.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"u\",{children:\"A Map has the following basic operations:\"})}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Insert:\"}),\" adds a new key and value pair to the map or sets a new value for a key\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Remove:\"}),\" attempts to remove a key and value pair from the map\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"Get:\"}),\" attempts to return the value in the map for a given key\"]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"p\",{children:\"The Map ADT is typically implemented using a Hash Table. A Hash Table is a natural choice to implement a Map because it already has key and value pairs. Because a Hash Table has constant time complexities for insertion, removal, and get operations, a map has the same complexities for these operations.\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Operation\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Worst-Case\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Average-Case\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Insert\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(1)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Remove\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(1)\"})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Get\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(n)\"}),/*#__PURE__*/_jsx(\"td\",{children:\"O(1)\"})]})]})})]});};export default MapInformation;","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Daily_Dose_of_Data/client/src/Map/MapInformation.js"],"names":["React","MapInformation"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,mBACI,aAAK,SAAS,CAAC,aAAf,wBACI,2WADJ,cAEI,aAFJ,cAGI,gCAAG,gEAAH,EAHJ,cAII,mCACI,mCAAI,8BAAJ,6EADJ,cAEI,mCAAI,8BAAJ,2DAFJ,cAGI,mCAAI,2BAAJ,8DAHJ,GAJJ,cASI,aATJ,cAUI,qUAVJ,cAWI,aAXJ,cAYI,oCACI,sCACI,mCAAI,iCAAJ,cAAsB,kCAAtB,cAAyC,oCAAzC,GADJ,cAEI,mCAAI,8BAAJ,cAAmB,4BAAnB,cAAgC,4BAAhC,GAFJ,cAGI,mCAAI,8BAAJ,cAAmB,4BAAnB,cAAgC,4BAAhC,GAHJ,cAII,mCAAI,2BAAJ,cAAgB,4BAAhB,cAA6B,4BAA7B,GAJJ,GADJ,EAZJ,GADJ,CAuBH,CAxBD,CA0BA,cAAeA,CAAAA,cAAf","sourcesContent":["import React from 'react';\r\n\r\nconst MapInformation = () => {\r\n    return (\r\n        <div className=\"information\">\r\n            <p>A Map is an Abstract Data Type (ADT) representing a collection of key and value pairs. Any value in the Map can be accessed using its corresponding key. Keys in a map must be unique, meaning each key can only have one corresponding value. The key value pairs in a map are stored in no particular order, they are simply a collection of data.</p>\r\n            <br />\r\n            <p><u>A Map has the following basic operations:</u></p>\r\n            <ul>\r\n                <li><b>Insert:</b> adds a new key and value pair to the map or sets a new value for a key</li>\r\n                <li><b>Remove:</b> attempts to remove a key and value pair from the map</li>\r\n                <li><b>Get:</b> attempts to return the value in the map for a given key</li>\r\n            </ul>\r\n            <br />\r\n            <p>The Map ADT is typically implemented using a Hash Table. A Hash Table is a natural choice to implement a Map because it already has key and value pairs. Because a Hash Table has constant time complexities for insertion, removal, and get operations, a map has the same complexities for these operations.</p>\r\n            <br />\r\n            <table>\r\n                <tbody>\r\n                    <tr><th>Operation</th><th>Worst-Case</th><th>Average-Case</th></tr>\r\n                    <tr><td>Insert</td><td>O(n)</td><td>O(1)</td></tr>\r\n                    <tr><td>Remove</td><td>O(n)</td><td>O(1)</td></tr>\r\n                    <tr><td>Get</td><td>O(n)</td><td>O(1)</td></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MapInformation;"]},"metadata":{},"sourceType":"module"}