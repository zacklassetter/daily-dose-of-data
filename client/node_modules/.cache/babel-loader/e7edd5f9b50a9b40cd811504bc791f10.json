{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\Testing\\\\quintenreacttesting\\\\src\\\\Queue\\\\Queue.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Queue.scss';\nimport Element from '../Element/Element'; //define Queue Node class\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Node {\n  constructor(value) {\n    this.value = value;\n    this.next = null;\n  }\n\n} //define Queue class with linked list implementation\n\n\nclass QueueClass {\n  constructor() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  enqueue(data) {\n    if (this.head == null) {\n      this.tail = new Node(data);\n      this.head = this.tail;\n    } else {\n      this.tail.next = new Node(data);\n      this.tail = this.tail.next;\n    }\n  }\n\n  dequeue() {\n    if (this.head == null) {\n      return undefined;\n    } else {\n      const temp = this.head;\n      this.head = this.head.next;\n      if (this.head == null) this.tail = null;\n      return temp.value;\n    }\n  }\n\n  peek() {\n    if (this.head == null) {\n      return undefined;\n    } else {\n      return this.head.value;\n    }\n  }\n\n} //returns a list of react element components from the queue component linked list\n\n\nconst QueueDisplay = props => {\n  var current = props.queue.head;\n  var index = 0;\n  var componentList = [];\n\n  while (current != null) {\n    componentList.push( /*#__PURE__*/_jsxDEV(Element, {\n      value: current.value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this));\n    current = current.next;\n    index++;\n  }\n\n  return componentList;\n}; //main react component for queue\n\n\n_c = QueueDisplay;\n\nconst Queue = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [queue] = useState(new QueueClass());\n  const queueInput = useRef();\n  const queueOutput = useRef(); //We call update on fake state variable to force rerender\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  };\n\n  const enqueue = () => {\n    const data = parseInt(queueInput.current.value);\n\n    if (!isNaN(data)) {\n      queue.enqueue(data);\n      forceUpdate();\n    }\n\n    queueInput.current.value = null;\n  };\n\n  const dequeue = () => {\n    const data = queue.dequeue();\n    forceUpdate();\n    if (data === undefined) queueOutput.current.value = \"None\";else queueOutput.current.value = data;\n  };\n\n  const peek = () => {\n    const data = queue.peek();\n    if (data === undefined) queueOutput.current.value = \"None\";else queueOutput.current.value = data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"enqueueButton\",\n        onClick: enqueue,\n        children: \"Enqueue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queueInput\",\n        ref: queueInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"dequeueButton\",\n        onClick: dequeue,\n        children: \"Dequeue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"queueOutput\",\n        ref: queueOutput,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"peekButton\",\n        onClick: peek,\n        children: \"Peek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\",\n      children: [/*#__PURE__*/_jsxDEV(QueueDisplay, {\n        queue: queue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"stackTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2190 Push\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2192 Pop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Queue, \"mO/u9Bx2QWlEct6kKnHtcEJ+6GI=\");\n\n_c2 = Queue;\nexport default Queue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueueDisplay\");\n$RefreshReg$(_c2, \"Queue\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/Testing/quintenreacttesting/src/Queue/Queue.js"],"names":["React","useState","useRef","Element","Node","constructor","value","next","QueueClass","head","tail","enqueue","data","dequeue","undefined","temp","peek","QueueDisplay","props","current","queue","index","componentList","push","Queue","forceRender","queueInput","queueOutput","forceUpdate","renders","parseInt","isNaN"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Queue.scss';\r\nimport Element from '../Element/Element';\r\n\r\n//define Queue Node class\r\nclass Node {\r\n    constructor(value) {\r\n        this.value = value;\r\n        this.next = null;\r\n    }\r\n}\r\n\r\n//define Queue class with linked list implementation\r\nclass QueueClass {\r\n    constructor() {\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    enqueue (data) {\r\n        if (this.head == null) {\r\n            this.tail = new Node(data);\r\n            this.head = this.tail;\r\n        } else {\r\n            this.tail.next = new Node(data);\r\n            this.tail = this.tail.next;\r\n        }\r\n    }\r\n    dequeue () {\r\n        if (this.head == null) {\r\n            return undefined;\r\n        } else {\r\n            const temp = this.head;\r\n            this.head = this.head.next;\r\n            if (this.head == null)\r\n                this.tail = null;\r\n            return temp.value;\r\n        }\r\n    }\r\n    peek () {\r\n        if (this.head == null) {\r\n            return undefined;\r\n        } else {\r\n            return this.head.value;\r\n        }\r\n    }\r\n}\r\n\r\n//returns a list of react element components from the queue component linked list\r\nconst QueueDisplay = (props) => {\r\n\tvar current = props.queue.head;\r\n    var index = 0;\r\n    var componentList = [];\r\n    while(current != null) {\r\n        componentList.push(<Element key={index} value={current.value} />);\r\n        current = current.next;\r\n        index++;\r\n    }\r\n    return componentList;\r\n}\r\n\r\n//main react component for queue\r\nconst Queue = () => {\r\n\t\r\n\tconst [, forceRender] = useState(0);\r\n\tconst [queue,] = useState(new QueueClass());\r\n\tconst queueInput = useRef();\r\n\tconst queueOutput = useRef();\r\n\t\r\n\t//We call update on fake state variable to force rerender\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\t\r\n\tconst enqueue = () => {\r\n\t\tconst data = parseInt(queueInput.current.value);\r\n\t\tif (!isNaN(data)) {\r\n\t\t\tqueue.enqueue(data);\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t\tqueueInput.current.value = null;\r\n\t}\r\n\t\r\n\tconst dequeue = () => {\r\n\t\tconst data = queue.dequeue();\r\n\t\tforceUpdate();\r\n\t\tif (data === undefined)\r\n\t\t\tqueueOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tqueueOutput.current.value = data;\r\n\t}\r\n\t\r\n\tconst peek = () => {\r\n\t\tconst data = queue.peek();\r\n\t\tif (data === undefined)\r\n\t\t\tqueueOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tqueueOutput.current.value = data;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"queue\">\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<button id=\"enqueueButton\" onClick={enqueue}>Enqueue</button>\r\n\t\t\t\t<input id=\"queueInput\" ref={queueInput} type=\"text\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"dequeueButton\" onClick={dequeue}>Dequeue</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input id=\"queueOutput\" ref={queueOutput} type=\"text\" readOnly />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"peekButton\" onClick={peek}>Peek</button>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"visualization\">\r\n\t\t\t\t<QueueDisplay queue={queue} />\r\n\t\t\t\t<div id=\"stackTop\">\r\n\t\t\t\t\t<p>&#x2190; Push</p>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<p>&#x2192; Pop</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Queue;"]},"metadata":{},"sourceType":"module"}