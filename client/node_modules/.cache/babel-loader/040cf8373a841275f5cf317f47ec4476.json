{"ast":null,"code":"import _toConsumableArray from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/quint/Documents/Daily_Dose_of_Data/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect,useCallback}from'react';import'./QuickSort.scss';import Element from'../Element/Element';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuickSortDisplay=function QuickSortDisplay(props){return props.array.map(function(value,index){if(index===props.pivot.current)return/*#__PURE__*/_jsx(Element,{value:value,color:\"purple\"},index);if(index===props.low.current&&index===props.high.current)return/*#__PURE__*/_jsx(Element,{value:value,border:\"bordered\",color:\"yellow\"},index);if(index===props.low.current)return/*#__PURE__*/_jsx(Element,{value:value,border:\"bordered\",color:\"pink\"},index);if(index===props.high.current)return/*#__PURE__*/_jsx(Element,{value:value,border:\"bordered\",color:\"green\"},index);if(props.sortedElements.current.includes(index))return/*#__PURE__*/_jsx(Element,{value:value,color:\"green\"},index);else return/*#__PURE__*/_jsx(Element,{value:value},index);});};var QuickSort=function QuickSort(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),forceRender=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),array=_useState4[0],setArray=_useState4[1];var interval=useRef(null);var sorting=useRef(false);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),sorted=_useState6[0],setSorted=_useState6[1];var toggleSortingButton=useRef();var generateArrayButton=useRef();var arraySizeInput=useRef();var speedSlider=useRef();var sortedElements=useRef([]);var worklist=useRef([]);var low=useRef(-1);var high=useRef(-1);var pivot=useRef(-1);//We call update on fake state variable to force rerender\nvar forceUpdate=function forceUpdate(){forceRender(function(renders){return renders+1;});};function swap(arr,x,y){var temp=arr[x];arr[x]=arr[y];arr[y]=temp;}function buildSorted(size){var arr=[];for(var i=0;i<size;i++){arr.push(i);}return arr;}var sortingStep=function sortingStep(){if(sortedElements.current.length===array.length){clearInterval(interval.current);sorting.current=false;toggleSortingButton.current.innerHTML=\"Sort\";toggleSortingButton.current.classList.remove(\"pinkButton\");toggleSortingButton.current.classList.add(\"greenButton\");}if(array.length===1){sortedElements.current.push(0);}if(pivot.current===-1){//initial step\nif(sortedElements.current.length===0){pivot.current=array.length-1;low.current=0;high.current=array.length-2;}else{low.current=worklist.current.shift();pivot.current=worklist.current.shift();if(!sortedElements.current.includes(pivot.current-1))high.current=pivot.current-1;if(pivot.current===0){sortedElements.current.push(pivot.current);low.current=-1;pivot.current=-1;high.current=-1;}}}else{if(pivot.current===0){sortedElements.current.push(pivot.current);}else if(low.current>high.current){var toInsert=array[pivot.current];array.splice(pivot.current,1);array.splice(low.current,0,toInsert);sortedElements.current.push(low.current);//worklist.current = worklist.current.map((value, index) => {\n//    if (value > low.current) return value + 1;\n//    else return;\n//})\nif(low.current!==0){//find low partition\nvar temp=sortedElements.current.filter(function(n){return n<low.current;});if(temp.length===0){worklist.current.push(0);worklist.current.push(low.current-1);}else{if(Math.max.apply(Math,_toConsumableArray(temp))!==low.current-1){worklist.current.push(Math.max.apply(Math,_toConsumableArray(temp))+1);worklist.current.push(low.current-1);}}}//find high bound\nif(low.current!==array.length-1){var _temp=sortedElements.current.filter(function(n){return n>low.current;});if(_temp.length===0){worklist.current.push(low.current+1);worklist.current.push(array.length-1);}else{if(Math.min.apply(Math,_toConsumableArray(_temp))!==low.current+1){worklist.current.push(low.current+1);worklist.current.push(Math.min.apply(Math,_toConsumableArray(_temp))-1);}}}low.current=-1;pivot.current=-1;high.current=-1;}else if(array[low.current]>array[pivot.current]){if(array[high.current]<array[pivot.current]){swap(array,low.current,high.current);}else high.current--;}else low.current++;}};//function to turn sorting on and off by button click\nvar toggleSorting=function toggleSorting(){if(sorting.current){clearInterval(interval.current);sorting.current=false;toggleSortingButton.current.innerHTML=\"Sort\";toggleSortingButton.current.classList.remove(\"pinkButton\");toggleSortingButton.current.classList.add(\"greenButton\");}else if(!sorted){interval.current=setInterval(function(){sortingStep();forceUpdate();},1000-speedSlider.current.value);sorting.current=true;toggleSortingButton.current.innerHTML=\"Stop\";toggleSortingButton.current.classList.remove(\"greenButton\");toggleSortingButton.current.classList.add(\"pinkButton\");}};var genWorstCase=function genWorstCase(){if(sorting.current){toggleSorting();}var size=parseInt(arraySizeInput.current.value);if(isNaN(size))size=randInt(5,50);if(size>0){setArray(buildSorted(size));setSorted(false);pivot.current=-1;low.current=-1;high.current=-1;sortedElements.current=[];}arraySizeInput.current.value=null;};//sets state array to a random array for sorting\nvar generateArray=function generateArray(){if(sorting.current){toggleSorting();}var size=parseInt(arraySizeInput.current.value);if(isNaN(size))size=randInt(5,50);if(size>0){setArray(randomArray(size));setSorted(false);pivot.current=-1;low.current=-1;high.current=-1;sortedElements.current=[];}arraySizeInput.current.value=null;};//generates a random array within reasonable bounds\nvar randomArray=useCallback(function(size){var newArray=new Array(size);for(var i=0;i<size;i++){newArray[i]=randInt(-999,1000);}return newArray;},[]);var randInt=function randInt(min,max){return Math.floor(Math.random()*(max-min)+min);};//initialize the array randomly at start\nuseEffect(function(){setArray(randomArray(randInt(5,50)));},[randomArray]);//changes the animation speed of sorting when the slider changes\nvar updateSpeed=function updateSpeed(){if(sorting.current){clearInterval(interval.current);interval.current=setInterval(function(){sortingStep();forceUpdate();},1000-speedSlider.current.value);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"quick-sort\",children:[/*#__PURE__*/_jsxs(\"div\",{id:\"main\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"randomButton\",ref:generateArrayButton,onClick:generateArray,children:\"Random\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledInput\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Array Size\"}),/*#__PURE__*/_jsx(\"input\",{id:\"arraySizeInput\",ref:arraySizeInput,type:\"text\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"worstButton\",onClick:genWorstCase,children:\"Worst-case\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{id:\"toggleSortingButton\",className:\"greenButton\",ref:toggleSortingButton,onClick:toggleSorting,children:\"Sort\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"span\",{className:\"labeledSlider\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Animation Speed\"}),/*#__PURE__*/_jsx(\"input\",{className:\"slider\",ref:speedSlider,onChange:updateSpeed,min:\"0\",max:\"990\",type:\"range\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"visualization\",children:/*#__PURE__*/_jsx(QuickSortDisplay,{array:array,low:low,high:high,pivot:pivot,sortedElements:sortedElements})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend\",children:[/*#__PURE__*/_jsx(Element,{color:\"green\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Sorted\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{}),/*#__PURE__*/_jsx(\"p\",{children:\"= Unsorted\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{color:\"pink\",border:\"bordered\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Current Low\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{color:\"green\",border:\"bordered\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Current High\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Element,{color:\"purple\"}),/*#__PURE__*/_jsx(\"p\",{children:\"= Pivot\"})]})]});};export default QuickSort;","map":{"version":3,"sources":["C:/Users/quint/Documents/Daily_Dose_of_Data/client/src/QuickSort/QuickSort.js"],"names":["React","useState","useRef","useEffect","useCallback","Element","QuickSortDisplay","props","array","map","value","index","pivot","current","low","high","sortedElements","includes","QuickSort","forceRender","setArray","interval","sorting","sorted","setSorted","toggleSortingButton","generateArrayButton","arraySizeInput","speedSlider","worklist","forceUpdate","renders","swap","arr","x","y","temp","buildSorted","size","i","push","sortingStep","length","clearInterval","innerHTML","classList","remove","add","shift","toInsert","splice","filter","n","Math","max","min","toggleSorting","setInterval","genWorstCase","parseInt","isNaN","randInt","generateArray","randomArray","newArray","Array","floor","random","updateSpeed"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport './QuickSort.scss';\r\nimport Element from '../Element/Element';\r\n\r\nconst QuickSortDisplay = (props) => {\r\n    return props.array.map((value, index) => {\r\n        if (index === props.pivot.current)\r\n            return <Element key={index} value={value} color=\"purple\" />\r\n        if (index === props.low.current && index === props.high.current)\r\n            return <Element key={index} value={value} border=\"bordered\" color=\"yellow\" />\r\n        if (index === props.low.current)\r\n            return <Element key={index} value={value} border=\"bordered\" color=\"pink\" />\r\n        if (index === props.high.current)\r\n            return <Element key={index} value={value} border=\"bordered\" color=\"green\" />\r\n        if (props.sortedElements.current.includes(index))\r\n            return <Element key={index} value={value} color=\"green\" />\r\n        else return <Element key={index} value={value} />\r\n    });\r\n}\r\n\r\n\r\nconst QuickSort = () => {\r\n    const [, forceRender] = useState(0);\r\n    const [array, setArray] = useState([]);\r\n    const interval = useRef(null);\r\n    const sorting = useRef(false);\r\n    const [sorted, setSorted] = useState(false);\r\n    const toggleSortingButton = useRef();\r\n    const generateArrayButton = useRef();\r\n    const arraySizeInput = useRef();\r\n    const speedSlider = useRef();\r\n\r\n    const sortedElements = useRef([]);\r\n    const worklist = useRef([]);\r\n    const low = useRef(-1);\r\n    const high = useRef(-1);\r\n    const pivot = useRef(-1);\r\n\r\n\r\n    //We call update on fake state variable to force rerender\r\n    const forceUpdate = () => {\r\n        forceRender(renders => renders + 1);\r\n    }\r\n\r\n    function swap(arr, x, y) {\r\n        var temp = arr[x];\r\n        arr[x] = arr[y];\r\n        arr[y] = temp;\r\n    }\r\n\r\n    function buildSorted(size) {\r\n        var arr = [];\r\n        for (var i = 0; i < size; i++) {\r\n            arr.push(i);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    const sortingStep = () => {\r\n        if (sortedElements.current.length === array.length) {\r\n            clearInterval(interval.current);\r\n            sorting.current = false;\r\n            toggleSortingButton.current.innerHTML = \"Sort\";\r\n            toggleSortingButton.current.classList.remove(\"pinkButton\");\r\n            toggleSortingButton.current.classList.add(\"greenButton\");\r\n        }\r\n\r\n        \r\n        if (array.length === 1) {\r\n            sortedElements.current.push(0);\r\n        }\r\n        if (pivot.current === -1) {\r\n            //initial step\r\n            if (sortedElements.current.length === 0) {\r\n                pivot.current = array.length - 1;\r\n                low.current = 0;\r\n                high.current = array.length - 2;\r\n            }\r\n            else {\r\n                low.current = worklist.current.shift();\r\n                pivot.current = worklist.current.shift();\r\n                if (!sortedElements.current.includes(pivot.current - 1)) high.current = pivot.current - 1;\r\n\r\n                if (pivot.current === 0) {\r\n                    sortedElements.current.push(pivot.current);\r\n                    low.current = -1;\r\n                    pivot.current = -1;\r\n                    high.current = -1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (pivot.current === 0) {\r\n                sortedElements.current.push(pivot.current);\r\n            }\r\n            else if (low.current > high.current) {\r\n                var toInsert = array[pivot.current];\r\n                array.splice(pivot.current, 1);\r\n                array.splice(low.current, 0, toInsert);\r\n                sortedElements.current.push(low.current);\r\n                //worklist.current = worklist.current.map((value, index) => {\r\n                //    if (value > low.current) return value + 1;\r\n                //    else return;\r\n                //})\r\n\r\n                if (low.current !== 0) {\r\n                    //find low partition\r\n                    let temp = sortedElements.current.filter(n => n < low.current);\r\n                    \r\n                    if (temp.length === 0) {\r\n\r\n\r\n                        \r\n                        worklist.current.push(0);\r\n                        worklist.current.push(low.current - 1);\r\n                    }\r\n                    else {\r\n                        if (Math.max(...temp) !== low.current - 1) {\r\n                            worklist.current.push(Math.max(...temp) + 1);\r\n                            worklist.current.push(low.current - 1);\r\n                        }\r\n                    }\r\n                }\r\n                //find high bound\r\n                if (low.current !== array.length - 1) {\r\n                    let temp = sortedElements.current.filter(n => n > low.current);\r\n                    if (temp.length === 0) {\r\n                        worklist.current.push(low.current + 1);\r\n                        worklist.current.push(array.length - 1);\r\n                    }\r\n                    else {\r\n                        if (Math.min(...temp) !== low.current + 1) {\r\n                            worklist.current.push(low.current + 1);\r\n                            worklist.current.push(Math.min(...temp) - 1);\r\n                        }\r\n                    }\r\n\r\n                    \r\n                }\r\n\r\n                low.current = -1;\r\n                pivot.current = -1;\r\n                high.current = -1;\r\n\r\n            }\r\n            else if (array[low.current] > array[pivot.current]) {\r\n                if (array[high.current] < array[pivot.current]) {\r\n                    swap(array, low.current, high.current);\r\n                }\r\n                else high.current--;\r\n            }\r\n            else low.current++;\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    //function to turn sorting on and off by button click\r\n    const toggleSorting = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            sorting.current = false;\r\n            toggleSortingButton.current.innerHTML = \"Sort\";\r\n            toggleSortingButton.current.classList.remove(\"pinkButton\");\r\n            toggleSortingButton.current.classList.add(\"greenButton\");\r\n        } else if (!sorted) {\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000 - speedSlider.current.value);\r\n            sorting.current = true;\r\n            toggleSortingButton.current.innerHTML = \"Stop\";\r\n            toggleSortingButton.current.classList.remove(\"greenButton\");\r\n            toggleSortingButton.current.classList.add(\"pinkButton\");\r\n        }\r\n    }\r\n\r\n    const genWorstCase = () => {\r\n        if (sorting.current) {\r\n            toggleSorting();\r\n        }\r\n        var size = parseInt(arraySizeInput.current.value);\r\n        if (isNaN(size))\r\n            size = randInt(5, 50);\r\n        if (size > 0) {\r\n            setArray(buildSorted(size));\r\n            setSorted(false);\r\n\r\n            pivot.current = -1;\r\n            low.current = -1;\r\n            high.current = -1;\r\n            sortedElements.current = [];\r\n\r\n        }\r\n\r\n        arraySizeInput.current.value = null;\r\n        \r\n    }\r\n\r\n    //sets state array to a random array for sorting\r\n    const generateArray = () => {\r\n        if (sorting.current) {\r\n            toggleSorting();\r\n        }\r\n        var size = parseInt(arraySizeInput.current.value);\r\n        if (isNaN(size))\r\n            size = randInt(5, 50);\r\n        if (size > 0) {\r\n            setArray(randomArray(size));\r\n            setSorted(false);\r\n\r\n            pivot.current = -1;\r\n            low.current = -1;\r\n            high.current = -1;\r\n            sortedElements.current = [];\r\n            \r\n        }\r\n        \r\n        arraySizeInput.current.value = null;\r\n    }\r\n    //generates a random array within reasonable bounds\r\n    const randomArray = useCallback((size) => {\r\n        var newArray = new Array(size);\r\n        for (let i = 0; i < size; i++) {\r\n            newArray[i] = randInt(-999, 1000);\r\n        }\r\n        return newArray;\r\n    }, []);\r\n    const randInt = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min) + min);\r\n    }\r\n\r\n    //initialize the array randomly at start\r\n    useEffect(() => {\r\n        setArray(randomArray(randInt(5, 50)));\r\n    }, [randomArray]);\r\n\r\n    //changes the animation speed of sorting when the slider changes\r\n    const updateSpeed = () => {\r\n        if (sorting.current) {\r\n            clearInterval(interval.current);\r\n            interval.current = setInterval(() => {\r\n                sortingStep();\r\n                forceUpdate();\r\n            }, 1000 - speedSlider.current.value);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"quick-sort\">\r\n            <div id=\"main\">\r\n                <div className=\"controls\">\r\n                    <button id=\"randomButton\" ref={generateArrayButton} onClick={generateArray}>Random</button>\r\n                    <span className=\"labeledInput\">\r\n                        <label>Array Size</label>\r\n                        <input id=\"arraySizeInput\" ref={arraySizeInput} type=\"text\"></input>\r\n                    </span>\r\n                    <br />\r\n                    <button id=\"worstButton\" onClick={genWorstCase}>Worst-case</button>\r\n                    <br />\r\n                    <button id=\"toggleSortingButton\" className=\"greenButton\" ref={toggleSortingButton} onClick={toggleSorting}>Sort</button>\r\n                    <br />\r\n                    <span className=\"labeledSlider\">\r\n                        <label>Animation Speed</label>\r\n                        <input className=\"slider\" ref={speedSlider} onChange={updateSpeed} min=\"0\" max=\"990\" type=\"range\"></input>\r\n                    </span>\r\n                </div>\r\n                <div className=\"visualization\">\r\n                    <QuickSortDisplay array={array} low={low} high={high} pivot={pivot} sortedElements={sortedElements} />\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"legend\">\r\n                <Element color=\"green\"></Element>\r\n                <p>= Sorted</p>\r\n                < br />\r\n                <Element></Element>\r\n                <p>= Unsorted</p>\r\n                <br />\r\n                <Element color=\"pink\" border=\"bordered\"></Element>\r\n                <p>= Current Low</p>\r\n                <br />\r\n                <Element color=\"green\" border=\"bordered\"></Element>\r\n                <p>= Current High</p>\r\n                <br />\r\n                <Element color=\"purple\" ></Element>\r\n                <p>= Pivot</p>\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\nexport default QuickSort;"]},"metadata":{},"sourceType":"module"}