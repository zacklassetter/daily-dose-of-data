{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\Testing\\\\quintenreacttesting\\\\src\\\\Stack\\\\Stack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Stack.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StackComponent = () => {\n  _s();\n\n  const [stack, setStack] = useState([]);\n  const stackInputRef = useRef();\n  const stackOutputRef = useRef();\n\n  const push = () => {\n    const data = this.stackInput.current.value;\n    this.setState(prevState => ({\n      stack: [...prevState.stack, data]\n    }));\n    this.stackInput.current.value = null;\n  };\n\n  const pop = () => {\n    setStack(prevState => prevState.stack.slice(0, prevState.stack.length - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Stack goes here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: push,\n      children: \"Push\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: stackInputRef,\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: pop,\n      children: \"Pop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: stackOutputRef,\n      type: \"text\",\n      readOnly: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StackComponent, \"cpcyRjqPQSoITwIii7b3zvXkH9A=\");\n\n_c = StackComponent;\nexport default StackComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"StackComponent\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/Testing/quintenreacttesting/src/Stack/Stack.js"],"names":["React","useState","useRef","StackComponent","stack","setStack","stackInputRef","stackOutputRef","push","data","stackInput","current","value","setState","prevState","pop","slice","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,aAAP;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMK,aAAa,GAAGJ,MAAM,EAA5B;AACA,QAAMK,cAAc,GAAGL,MAAM,EAA7B;;AAEA,QAAMM,IAAI,GAAG,MAAM;AAClB,UAAMC,IAAI,GAAG,KAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,KAArC;AACA,SAAKC,QAAL,CAAcC,SAAS,KAAK;AAC3BV,MAAAA,KAAK,EAAE,CAAC,GAAGU,SAAS,CAACV,KAAd,EAAqBK,IAArB;AADoB,KAAL,CAAvB;AAGA,SAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,KAAxB,GAAgC,IAAhC;AACA,GAND;;AAQA,QAAMG,GAAG,GAAG,MAAM;AACjBV,IAAAA,QAAQ,CAACS,SAAS,IACjBA,SAAS,CAACV,KAAV,CAAgBY,KAAhB,CAAsB,CAAtB,EAAwBF,SAAS,CAACV,KAAV,CAAgBa,MAAhB,GAAuB,CAA/C,CADO,CAAR;AAGA,GAJD;;AAMA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,OAAO,EAAET,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AAAO,MAAA,GAAG,EAAEF,aAAZ;AAA2B,MAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHD,eAIC;AAAQ,MAAA,OAAO,EAAES,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAO,MAAA,GAAG,EAAER,cAAZ;AAA4B,MAAA,IAAI,EAAC,MAAjC;AAAwC,MAAA,QAAQ;AAAhD;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AASA,CA7BD;;GAAMJ,c;;KAAAA,c;AA+BN,eAAeA,cAAf","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Stack.css';\r\n\r\nconst StackComponent = () => {\r\n\t\r\n\tconst [stack, setStack] = useState([])\r\n\tconst stackInputRef = useRef()\r\n\tconst stackOutputRef = useRef()\r\n\t\r\n\tconst push = () => {\r\n\t\tconst data = this.stackInput.current.value;\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tstack: [...prevState.stack, data]\r\n\t\t}));\r\n\t\tthis.stackInput.current.value = null;\r\n\t}\r\n\t\r\n\tconst pop = () => {\r\n\t\tsetStack(prevState => (\r\n\t\t\tprevState.stack.slice(0,prevState.stack.length-1)\r\n\t\t));\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>Stack goes here.</p>\r\n\t\t\t<button onClick={push}>Push</button>\r\n\t\t\t<input ref={stackInputRef} type=\"text\" />\r\n\t\t\t<button onClick={pop}>Pop</button>\r\n\t\t\t<input ref={stackOutputRef} type=\"text\" readOnly />\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default StackComponent;"]},"metadata":{},"sourceType":"module"}