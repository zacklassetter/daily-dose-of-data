{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\qdeman\\\\Documents\\\\Web_Project\\\\Testing\\\\quintenreacttesting\\\\src\\\\Stack\\\\Stack.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './Stack.css';\nimport StackDisplay from './StackDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stack = () => {\n  _s();\n\n  const [, forceRender] = useState(0);\n  const [stack] = useState([]);\n  const stackInput = useRef();\n  const stackOutput = useRef(); //We call setStack without changing anything to force a re-render\n\n  const forceUpdate = () => {\n    forceRender(renders => renders + 1);\n  };\n\n  const push = () => {\n    const data = parseInt(stackInput.current.value);\n\n    if (!isNaN(data)) {\n      stack.push(data);\n      forceUpdate();\n    }\n\n    stackInput.current.value = null;\n  };\n\n  const pop = () => {\n    const data = stack.pop();\n    forceUpdate();\n    if (data === undefined) stackOutput.current.value = \"None\";else stackOutput.current.value = data;\n  };\n\n  const peek = () => {\n    const data = stack[stack.length - 1];\n    if (data === undefined) stackOutput.current.value = \"None\";else stackOutput.current.value = data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interactive-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pushButton\",\n        onClick: push,\n        children: \"Push\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stackInput\",\n        ref: stackInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"popButton\",\n        onClick: pop,\n        children: \"Pop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stackOutput\",\n        ref: stackOutput,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"peekButton\",\n        onClick: peek,\n        children: \"Peek\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization\",\n      children: [/*#__PURE__*/_jsxDEV(StackDisplay, {\n        stack: stack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"stackTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2190 Push\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u2192 Pop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Stack, \"zNpZdIoYGWUv7Km03MRGdi+41Rc=\");\n\n_c = Stack;\nexport default Stack;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stack\");","map":{"version":3,"sources":["C:/Users/qdeman/Documents/Web_Project/Testing/quintenreacttesting/src/Stack/Stack.js"],"names":["React","useState","useRef","StackDisplay","Stack","forceRender","stack","stackInput","stackOutput","forceUpdate","renders","push","data","parseInt","current","value","isNaN","pop","undefined","peek","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Stack.css';\r\nimport StackDisplay from './StackDisplay';\r\n\r\nconst Stack = () => {\r\n\t\r\n\tconst [, forceRender] = useState(0);\r\n\tconst [stack,] = useState([]);\r\n\tconst stackInput = useRef();\r\n\tconst stackOutput = useRef();\r\n\t\r\n\t//We call setStack without changing anything to force a re-render\r\n\tconst forceUpdate = () => {\r\n\t\tforceRender(renders => renders+1);\r\n\t}\r\n\t\r\n\tconst push = () => {\r\n\t\tconst data = parseInt(stackInput.current.value);\r\n\t\tif (!isNaN(data)) {\r\n\t\t\tstack.push(data);\r\n\t\t\tforceUpdate();\r\n\t\t}\r\n\t\tstackInput.current.value = null;\r\n\t}\r\n\t\r\n\tconst pop = () => {\r\n\t\tconst data = stack.pop();\r\n\t\tforceUpdate();\r\n\t\tif (data === undefined)\r\n\t\t\tstackOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tstackOutput.current.value = data;\r\n\t}\r\n\t\r\n\tconst peek = () => {\r\n\t\tconst data = stack[stack.length-1];\r\n\t\tif (data === undefined)\r\n\t\t\tstackOutput.current.value = \"None\";\r\n\t\telse\r\n\t\t\tstackOutput.current.value = data;\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"interactive-section\">\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<button id=\"pushButton\" onClick={push}>Push</button>\r\n\t\t\t\t<input id=\"stackInput\" ref={stackInput} type=\"text\" />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"popButton\" onClick={pop}>Pop</button>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input id=\"stackOutput\" ref={stackOutput} type=\"text\" readOnly />\r\n\t\t\t\t<br />\r\n\t\t\t\t<button id=\"peekButton\" onClick={peek}>Peek</button>\r\n\t\t\t\t<br />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"visualization\">\r\n\t\t\t\t<StackDisplay stack={stack} />\r\n\t\t\t\t<div id=\"stackTop\">\r\n\t\t\t\t\t<p>&#x2190; Push</p>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<p>&#x2192; Pop</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Stack;"]},"metadata":{},"sourceType":"module"}